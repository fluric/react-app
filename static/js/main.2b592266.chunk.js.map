{"version":3,"sources":["main/webapp/store/initialState.js","main/webapp/store/index.js","main/webapp/components/SideMenu.js","main/webapp/components/RockPaperScissors.style.js","main/webapp/utilities/RockPaperScissorsUtility.js","main/webapp/components/RockPaperScissors.js","main/webapp/components/RockPaperScissorsBoard.js","main/webapp/App.js","index.js"],"names":["initialState","rootReducer","reduceReducers","map","reducer","produce","draft","action","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","MainMenu","Menu","direction","inverted","Item","Icon","name","id","StyledButton","styled","Button","ButtonContainer","div","Actions","ActionList","Outcomes","Colors","DEFAULT","OpponentColors","defaultColors","ButtonWrapper","props","color","onClick","size","icon","RockPaperScissors","onOutcome","useState","setAction","colors","setColors","opponentAction","setOpponentAction","opponentColor","setOpponentColor","showOpponent","setShowOpponent","actionHistory","setActionHistory","executeRound","nextAction","nextOpponentAction","index","random","getOpponentAction","outcome","getOutcome","nextColors","setTimeout","currentTarget","Container","Grid","columns","centered","GridColumn","mobile","verticalAlign","Transition","visible","isNull","transitionOnMount","ScoreBoard","score","opponentScore","Segment","compact","RockPaperScissorsBoard","setScore","setOpponentScore","App","ReactDOM","render","locale","messages","document","getElementById"],"mappings":"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","file":"static/js/main.2b592266.chunk.js","sourcesContent":["export const initialState = {};\n","import { composeWithDevTools } from 'redux-devtools-extension';\nimport { applyMiddleware, createStore } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport reduceReducers from 'reduce-reducers';\nimport produce from 'immer';\n\nimport { initialState } from 'main/webapp/store/initialState';\n\nconst withProduce = reducers => reducers.map(reducer => produce((draft, action) => reducer(draft, action)));\n\nconst rootReducer = reduceReducers(initialState, ...withProduce([]));\n\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(thunkMiddleware)));\n\nexport default store;\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Icon, Menu } from 'semantic-ui-react';\n\nexport const MainMenu = () => (\n  <Menu direction='top' inverted>\n    <Menu.Item>\n      <Icon name='gamepad' />\n      <FormattedMessage id={'app.menu.label.rockPaperScissors'} />\n    </Menu.Item>\n  </Menu>\n);\n","import { Button } from 'semantic-ui-react';\nimport styled from 'styled-components';\n\nexport const StyledButton = styled(Button)`\n  margin: 5px !important;\n`;\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n`;\n","import { random } from 'lodash';\n\nexport const Actions = {\n  ROCK: 'rock',\n  PAPER: 'paper',\n  SCISSORS: 'scissors',\n};\n\nexport const ActionList = [Actions.ROCK, Actions.PAPER, Actions.SCISSORS];\n\nexport const Outcomes = {\n  WIN: 'win',\n  DRAW: 'draw',\n  DEFEAT: 'defeat',\n};\n\nexport const Colors = {\n  DEFAULT: null,\n  [Outcomes.WIN]: 'green',\n  [Outcomes.DRAW]: 'blue',\n  [Outcomes.DEFEAT]: 'red',\n};\n\nexport const OpponentColors = {\n  DEFAULT: null,\n  [Outcomes.DEFEAT]: 'green',\n  [Outcomes.DRAW]: 'blue',\n  [Outcomes.WIN]: 'red',\n};\n\nexport const defaultColors = {\n  [Actions.PAPER]: Colors.DEFAULT,\n  [Actions.ROCK]: Colors.DEFAULT,\n  [Actions.SCISSORS]: Colors.DEFAULT,\n};\n\nexport const getOutcome = (action, opponentAction) => {\n  if (action === opponentAction) {\n    return Outcomes.DRAW;\n  }\n  if (action === Actions.PAPER) {\n    return opponentAction === Actions.SCISSORS ? Outcomes.DEFEAT : Outcomes.WIN;\n  }\n  if (action === Actions.SCISSORS) {\n    return opponentAction === Actions.ROCK ? Outcomes.DEFEAT : Outcomes.WIN;\n  }\n  if (action === Actions.ROCK) {\n    return opponentAction === Actions.PAPER ? Outcomes.DEFEAT : Outcomes.WIN;\n  }\n};\n\nexport const getOpponentAction = () => {\n  const index = random(2);\n  return ActionList[index];\n};\n","import React, { useState } from 'react';\nimport { Container, Grid, GridColumn, Transition } from 'semantic-ui-react';\nimport { isNull } from 'lodash';\n\nimport { ButtonContainer, StyledButton } from 'main/webapp/components/RockPaperScissors.style';\nimport {\n  Actions,\n  Colors,\n  defaultColors,\n  getOpponentAction,\n  getOutcome,\n  OpponentColors,\n} from 'main/webapp/utilities/RockPaperScissorsUtility';\n\nconst OPPONENT_DELAY = 500; // ms\n\nconst ButtonWrapper = props => {\n  const { id, color, onClick } = props;\n  return <StyledButton size={'large'} id={id} icon={`hand ${id}`} onClick={onClick} color={color} />;\n};\n\nexport const RockPaperScissors = ({ onOutcome }) => {\n  const [, setAction] = useState(null);\n  const [colors, setColors] = useState(defaultColors);\n  const [opponentAction, setOpponentAction] = useState(null);\n  const [opponentColor, setOpponentColor] = useState(null);\n  const [showOpponent, setShowOpponent] = useState(true);\n  const [actionHistory, setActionHistory] = useState([]);\n\n  const executeRound = nextAction => {\n    const nextOpponentAction = getOpponentAction();\n    const outcome = getOutcome(nextAction, nextOpponentAction);\n    const nextColors = { ...defaultColors, [nextAction]: Colors[outcome] };\n\n    setShowOpponent(false);\n    setColors(defaultColors);\n    setAction(nextAction);\n    setActionHistory([...actionHistory, { action: nextAction, opponentAction: nextOpponentAction }]);\n    setTimeout(() => {\n      setColors(nextColors);\n      setOpponentColor(OpponentColors[outcome]);\n      setOpponentAction(nextOpponentAction);\n      onOutcome(outcome);\n      setShowOpponent(true);\n    }, OPPONENT_DELAY);\n  };\n\n  const onClick = ({ currentTarget: { id: action } }) => showOpponent && executeRound(action);\n\n  return (\n    <Container>\n      <Grid columns={2} centered>\n        <GridColumn mobile={3}>\n          <ButtonContainer>\n            <ButtonWrapper id={Actions.ROCK} color={colors[Actions.ROCK]} onClick={onClick} />\n            <ButtonWrapper id={Actions.PAPER} color={colors[Actions.PAPER]} onClick={onClick} />\n            <ButtonWrapper id={Actions.SCISSORS} color={colors[Actions.SCISSORS]} onClick={onClick} />\n          </ButtonContainer>\n        </GridColumn>\n        <GridColumn mobile={3} verticalAlign={'middle'}>\n          <Transition visible={showOpponent && !isNull(opponentAction)} transitionOnMount>\n            <StyledButton size={'large'} id={'opponent'} icon={`hand ${opponentAction}`} color={opponentColor} />\n          </Transition>\n        </GridColumn>\n      </Grid>\n    </Container>\n  );\n};\n","import React, { useState } from 'react';\nimport { Grid, Segment } from 'semantic-ui-react';\nimport { RockPaperScissors } from 'main/webapp/components/RockPaperScissors';\nimport { Outcomes } from 'main/webapp/utilities/RockPaperScissorsUtility';\n\nconst ScoreBoard = ({ score, opponentScore }) => <Segment compact>{`${score} : ${opponentScore}`}</Segment>;\n\nexport const RockPaperScissorsBoard = () => {\n  const [score, setScore] = useState(0);\n  const [opponentScore, setOpponentScore] = useState(0);\n\n  const onOutcome = outcome => {\n    outcome === Outcomes.WIN && setScore(score + 1);\n    outcome === Outcomes.DEFEAT && setOpponentScore(opponentScore + 1);\n  };\n\n  return (\n    <Grid centered>\n      <ScoreBoard score={score} opponentScore={opponentScore} />\n      <RockPaperScissors onOutcome={onOutcome} />\n    </Grid>\n  );\n};\n","import React from 'react';\nimport { Container } from 'semantic-ui-react';\n\nimport 'semantic-ui-css/semantic.min.css';\nimport { MainMenu } from 'main/webapp/components/SideMenu';\nimport { RockPaperScissorsBoard } from 'main/webapp/components/RockPaperScissorsBoard';\n\nconst App = () => (\n  <Container>\n    <MainMenu />\n    <RockPaperScissorsBoard />\n  </Container>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { IntlProvider } from 'react-intl';\nimport { Provider } from 'react-redux';\n\nimport store from 'main/webapp/store';\nimport App from 'main/webapp/App';\nimport messages from 'main/webapp/translations/en.json';\n\nReactDOM.render(\n  <Provider store={store}>\n    <IntlProvider locale={'en'} messages={messages}>\n      <App />\n    </IntlProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}