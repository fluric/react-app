{"version":3,"sources":["main/webapp/store/initialState.js","main/webapp/store/index.js","main/webapp/components/SideMenu.js","main/webapp/components/RockPaperScissors.style.js","main/webapp/components/RockPaperScissors.js","main/webapp/App.js","index.js"],"names":["initialState","rootReducer","reduceReducers","map","reducer","produce","draft","action","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","MainMenu","Menu","direction","inverted","Item","Icon","name","id","OpponentButton","styled","Button","Moves","MovesList","RockPaperScissors","useState","selected","setSelected","opponentMove","setOpponentMove","onClick","target","index","Math","floor","random","Container","Grid","GridColumn","icon","primary","Transition","visible","isNull","App","ReactDOM","render","locale","messages","document","getElementById"],"mappings":"uTAAaA,EAAe,GCUtBC,E,OAAcC,EAAc,WAAd,GAAeF,GAAf,mBAA4C,GAFvBG,KAAI,SAAAC,GAAO,OAAIC,aAAQ,SAACC,EAAOC,GAAR,OAAmBH,EAAQE,EAAOC,YAMnFC,EAFDC,sBAAYR,EAAaD,EAAcU,8BAAoBC,0BAAgBC,O,oDCR5EC,EAAW,kBACtB,cAACC,EAAA,EAAD,CAAMC,UAAU,MAAMC,UAAQ,EAA9B,SACE,eAACF,EAAA,EAAKG,KAAN,WACE,cAACC,EAAA,EAAD,CAAMC,KAAK,YACX,cAAC,IAAD,CAAkBC,GAAI,2C,+DCLfC,EAAiBC,YAAOC,IAAPD,CAAH,uD,SCErBE,EACE,OADFA,EAEG,QAFHA,EAGM,WAGNC,EAAY,CAACD,EAAYA,EAAaA,GAE/BE,EAAoB,WAAO,IAAD,EACLC,mBAAS,MADJ,mBAC9BC,EAD8B,KACpBC,EADoB,OAEGF,mBAAS,IAFZ,mBAE9BG,EAF8B,KAEhBC,EAFgB,KAI/BC,EAAU,SAAC,GAAwB,IAAZZ,EAAW,EAArBa,OAAUb,GAC3BS,EAAYT,GACZ,IAAMc,EAAQC,KAAKC,MAAsB,EAAhBD,KAAKE,UAC9BN,EAAgBN,EAAUS,KAG5B,OACE,cAACI,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,WACE,cAACjB,EAAA,EAAD,CAAQH,GAAII,EAAYiB,KAAK,YAAYT,QAASA,EAASU,QAASd,IAAaJ,IACjF,cAACD,EAAA,EAAD,CAAQH,GAAII,EAAaiB,KAAK,aAAaT,QAASA,EAASU,QAASd,IAAaJ,IACnF,cAACD,EAAA,EAAD,CAAQH,GAAII,EAAgBiB,KAAK,gBAAgBT,QAASA,EAASU,QAASd,IAAaJ,OAE3F,cAACgB,EAAA,EAAD,UACE,cAACG,EAAA,EAAD,CAAYC,SAAUC,iBAAOjB,GAA7B,SACE,cAACP,EAAD,CAAgBoB,KAAI,eAAUX,eCnB3BgB,EAPH,kBACV,eAACR,EAAA,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,Q,SCDJS,IAASC,OACP,cAAC,IAAD,CAAUxC,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAcyC,OAAQ,KAAMC,SAAUA,EAAtC,SACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.b5f6ec71.chunk.js","sourcesContent":["export const initialState = {};\n","import { composeWithDevTools } from 'redux-devtools-extension';\nimport { applyMiddleware, createStore } from 'redux';\nimport produce from 'immer';\nimport thunkMiddleware from 'redux-thunk';\nimport reduceReducers from 'reduce-reducers';\n\nimport { initialState } from 'main/webapp/store/initialState';\n\nconst withProduce = reducers => reducers.map(reducer => produce((draft, action) => reducer(draft, action)));\n\nconst rootReducer = reduceReducers(initialState, ...withProduce([]));\n\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(thunkMiddleware)));\n\nexport default store;\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Icon, Menu } from 'semantic-ui-react';\n\nexport const MainMenu = () => (\n  <Menu direction='top' inverted>\n    <Menu.Item>\n      <Icon name='gamepad' />\n      <FormattedMessage id={'app.menu.label.rockPaperScissors'} />\n    </Menu.Item>\n  </Menu>\n);\n","import { Button } from 'semantic-ui-react';\nimport styled from 'styled-components';\n\nexport const OpponentButton = styled(Button)`\n  'paddingRight':'10px' ;\n`;\n","import React, { useState } from 'react';\nimport { Button, Container, Grid, GridColumn, Transition } from 'semantic-ui-react';\nimport { OpponentButton } from 'main/webapp/components/RockPaperScissors.style';\nimport { isNull } from 'lodash';\n\nconst Moves = {\n  ROCK: 'rock',\n  PAPER: 'paper',\n  SCISSORS: 'scissors',\n};\n\nconst MovesList = [Moves.ROCK, Moves.PAPER, Moves.SCISSORS];\n\nexport const RockPaperScissors = () => {\n  const [selected, setSelected] = useState(null);\n  const [opponentMove, setOpponentMove] = useState('');\n\n  const onClick = ({ target: { id } }) => {\n    setSelected(id);\n    const index = Math.floor(Math.random() * 3);\n    setOpponentMove(MovesList[index]);\n  };\n\n  return (\n    <Container>\n      <Grid>\n        <GridColumn>\n          <Button id={Moves.ROCK} icon='hand rock' onClick={onClick} primary={selected === Moves.ROCK} />\n          <Button id={Moves.PAPER} icon='hand paper' onClick={onClick} primary={selected === Moves.PAPER} />\n          <Button id={Moves.SCISSORS} icon='hand scissors' onClick={onClick} primary={selected === Moves.SCISSORS} />\n        </GridColumn>\n        <GridColumn>\n          <Transition visible={!isNull(selected)}>\n            <OpponentButton icon={`hand ${opponentMove}`} />\n          </Transition>\n        </GridColumn>\n      </Grid>\n    </Container>\n  );\n};\n","import React from 'react';\nimport { Container } from 'semantic-ui-react';\n\nimport 'semantic-ui-css/semantic.min.css';\nimport { MainMenu } from 'main/webapp/components/SideMenu';\nimport { RockPaperScissors } from 'main/webapp/components/RockPaperScissors';\n\nconst App = () => (\n  <Container>\n    <MainMenu />\n    <RockPaperScissors />\n  </Container>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { IntlProvider } from 'react-intl';\nimport { Provider } from 'react-redux';\n\nimport store from 'main/webapp/store';\nimport App from 'main/webapp/App';\nimport messages from 'main/webapp/translations/en.json';\n\nReactDOM.render(\n  <Provider store={store}>\n    <IntlProvider locale={'en'} messages={messages}>\n      <App />\n    </IntlProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}