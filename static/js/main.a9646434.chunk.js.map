{"version":3,"sources":["main/webapp/store/initialState.js","main/webapp/store/index.js","main/webapp/Routes.js","main/webapp/components/MainMenu.js","main/webapp/components/rock-paper-scissors/RockPaperScissors.style.js","main/webapp/utilities/RockPaperScissorsUtility.js","main/webapp/components/rock-paper-scissors/RockPaperScissorsStrategies.js","main/webapp/components/rock-paper-scissors/RockPaperScissors.js","main/webapp/components/wrappers/ModalWrapper.js","main/webapp/components/rock-paper-scissors/RockPaperScissorsModals.js","main/webapp/components/rock-paper-scissors/RockPaperScissorsBoard.js","main/webapp/App.js","index.js"],"names":["initialState","rootReducer","reduceReducers","map","reducer","produce","draft","action","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","ROCK_PAPER_SCISSORS","JOKES","MainMenu","Menu","direction","inverted","Item","to","Icon","name","id","StyledButton","styled","Button","ButtonContainer","div","OPPONENT_DELAY","Actions","ActionList","Outcomes","Colors","DEFAULT","OpponentColors","defaultColors","getRandomAction","index","random","Strategies","1","2","actionHistory","length","last","3","4","5","nth","ButtonWrapper","color","onClick","size","icon","RockPaperScissors","onOutcome","level","useState","colors","setColors","opponentAction","setOpponentAction","opponentColor","setOpponentColor","showOpponent","setShowOpponent","setActionHistory","getOpponentAction","useEffect","resetComponent","executeRound","nextAction","nextOpponentAction","outcome","getOutcome","nextColors","setTimeout","currentTarget","Container","Grid","columns","centered","GridColumn","mobile","verticalAlign","Transition","visible","isNull","transitionOnMount","ModalWrapper","open","actions","header","content","Modal","basic","closeOnDimmerClick","closeOnEscape","ModalHeader","ModalContent","ModalActions","SuccessModal","onConfirm","onDeny","FailureModal","LevelsCompleteModal","ScoreBoard","score","opponentScore","Segment","compact","values","LevelDisplay","Header","textAlign","RockPaperScissorsBoard","setLevel","setScore","setOpponentScore","showSuccessModal","setShowSuccessModal","showFailureModal","setShowFailureModal","showLevelsCompleteModal","setShowLevelsCompleteModal","Object","keys","resetScore","GridRow","App","path","ReactDOM","render","basename","locale","messages","document","getElementById"],"mappings":"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","file":"static/js/main.a9646434.chunk.js","sourcesContent":["export const initialState = {};\n","import { composeWithDevTools } from 'redux-devtools-extension';\nimport { applyMiddleware, createStore } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport reduceReducers from 'reduce-reducers';\nimport produce from 'immer';\n\nimport { initialState } from 'main/webapp/store/initialState';\n\nconst withProduce = reducers => reducers.map(reducer => produce((draft, action) => reducer(draft, action)));\n\nconst rootReducer = reduceReducers(initialState, ...withProduce([]));\n\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(thunkMiddleware)));\n\nexport default store;\n","export const BASE_NAME = '/react-app';\nexport const ROCK_PAPER_SCISSORS = '/rock-paper-scissors';\nexport const JOKES = '/jokes';\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\nimport { Icon, Menu } from 'semantic-ui-react';\n\nimport { JOKES, ROCK_PAPER_SCISSORS } from 'main/webapp/Routes';\n\nexport const MainMenu = () => (\n  <Menu direction='top' inverted>\n    <Menu.Item>\n      <Link to={ROCK_PAPER_SCISSORS}>\n        <Icon name='gamepad' />\n        <FormattedMessage id={'app.menu.label.rockPaperScissors'} />\n      </Link>\n    </Menu.Item>\n    <Menu.Item>\n      <Link to={JOKES}>\n        <Icon name='talk' />\n        <FormattedMessage id={'app.menu.label.jokes'} />\n      </Link>\n    </Menu.Item>\n  </Menu>\n);\n","import { Button } from 'semantic-ui-react';\nimport styled from 'styled-components';\n\nexport const StyledButton = styled(Button)`\n  margin: 5px !important;\n`;\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n`;\n","import { random } from 'lodash';\n\nexport const OPPONENT_DELAY = 500; // ms\n\nexport const Actions = {\n  ROCK: 'rock',\n  PAPER: 'paper',\n  SCISSORS: 'scissors',\n};\n\nexport const ActionList = [Actions.ROCK, Actions.PAPER, Actions.SCISSORS];\n\nexport const Outcomes = {\n  WIN: 'win',\n  DRAW: 'draw',\n  DEFEAT: 'defeat',\n};\n\nexport const Colors = {\n  DEFAULT: null,\n  [Outcomes.WIN]: 'green',\n  [Outcomes.DRAW]: 'blue',\n  [Outcomes.DEFEAT]: 'red',\n};\n\nexport const OpponentColors = {\n  DEFAULT: null,\n  [Outcomes.DEFEAT]: 'green',\n  [Outcomes.DRAW]: 'blue',\n  [Outcomes.WIN]: 'red',\n};\n\nexport const defaultColors = {\n  [Actions.PAPER]: Colors.DEFAULT,\n  [Actions.ROCK]: Colors.DEFAULT,\n  [Actions.SCISSORS]: Colors.DEFAULT,\n};\n\nexport const getOutcome = (action, opponentAction) => {\n  if (action === opponentAction) {\n    return Outcomes.DRAW;\n  }\n  if (action === Actions.PAPER) {\n    return opponentAction === Actions.SCISSORS ? Outcomes.DEFEAT : Outcomes.WIN;\n  }\n  if (action === Actions.SCISSORS) {\n    return opponentAction === Actions.ROCK ? Outcomes.DEFEAT : Outcomes.WIN;\n  }\n  if (action === Actions.ROCK) {\n    return opponentAction === Actions.PAPER ? Outcomes.DEFEAT : Outcomes.WIN;\n  }\n};\n\nexport const getOpponentAction = () => {\n  const index = random(2);\n  return ActionList[index];\n};\n","import { last, random, nth } from 'lodash';\n\nimport { ActionList, Actions } from 'main/webapp/utilities/RockPaperScissorsUtility';\n\nconst getDummyAction = () => {\n  return ActionList[0];\n};\n\nexport const getGreedyAction = actionHistory => {\n  if (actionHistory.length === 0) {\n    return getRandomAction();\n  }\n  const lastAction = last(actionHistory).action;\n\n  switch (lastAction) {\n    case Actions.SCISSORS:\n      return Actions.ROCK;\n    case Actions.ROCK:\n      return Actions.PAPER;\n    case Actions.PAPER:\n      return Actions.SCISSORS;\n  }\n};\n\nexport const getTit4TatAction = actionHistory => {\n  if (actionHistory.length === 0) {\n    return getRandomAction();\n  }\n  return last(actionHistory).action;\n};\n\nexport const getTit42TatAction = actionHistory => {\n  if (actionHistory.length < 2) {\n    return getRandomAction();\n  }\n  return nth(actionHistory, -2).action;\n};\n\nexport const getNoScissorsAction = () => {\n  const index = random(1);\n  return ActionList[index];\n};\n\n// TODO\nexport const getDeterminedAction = actionHistory => {\n  if (actionHistory.length === 0) {\n    return getRandomAction();\n  }\n  const lastAction = last(actionHistory).action;\n\n  switch (lastAction) {\n    case Actions.SCISSORS:\n      return Actions.ROCK;\n    case Actions.ROCK:\n      return Actions.PAPER;\n    case Actions.PAPER:\n      return Actions.SCISSORS;\n  }\n};\n\n// TODO win to most statistical action\n// TODO least loss statistical\n// TODO longest time since lost with action\n// TODO balanced\n// TODO play one that is not opponentAction\n\nexport const getRandomAction = () => {\n  const index = random(2);\n  return ActionList[index];\n};\n\nexport const Strategies = {\n  1: getDummyAction,\n  2: getGreedyAction,\n  3: getTit4TatAction,\n  4: getNoScissorsAction,\n  5: getTit42TatAction,\n};\n","import React, { useEffect, useState } from 'react';\nimport { Container, Grid, GridColumn, Transition } from 'semantic-ui-react';\nimport { isNull } from 'lodash';\n\nimport { ButtonContainer, StyledButton } from 'main/webapp/components/rock-paper-scissors/RockPaperScissors.style';\nimport {\n  Actions,\n  Colors,\n  defaultColors,\n  getOutcome,\n  OPPONENT_DELAY,\n  OpponentColors,\n} from 'main/webapp/utilities/RockPaperScissorsUtility';\nimport { Strategies } from 'main/webapp/components/rock-paper-scissors/RockPaperScissorsStrategies';\n\nconst ButtonWrapper = ({ id, color, onClick }) => (\n  <StyledButton size={'large'} id={id} icon={`hand ${id}`} onClick={onClick} color={color} />\n);\n\nexport const RockPaperScissors = ({ onOutcome, level }) => {\n  const [colors, setColors] = useState(defaultColors);\n  const [opponentAction, setOpponentAction] = useState(null);\n  const [opponentColor, setOpponentColor] = useState(null);\n  const [showOpponent, setShowOpponent] = useState(true);\n  const [actionHistory, setActionHistory] = useState([]);\n\n  const getOpponentAction = Strategies[level];\n\n  useEffect(() => resetComponent(), [level]);\n\n  const resetComponent = () => {\n    setActionHistory([]);\n    setColors(defaultColors);\n    setOpponentAction(null);\n    setOpponentColor(null);\n    setShowOpponent(true);\n  };\n\n  const executeRound = nextAction => {\n    const nextOpponentAction = getOpponentAction(actionHistory);\n    const outcome = getOutcome(nextAction, nextOpponentAction);\n    const nextColors = { ...defaultColors, [nextAction]: Colors[outcome] };\n\n    // prepare transition\n    setShowOpponent(false);\n    setColors(defaultColors);\n\n    // execute changes after transition\n    setTimeout(() => {\n      setActionHistory([...actionHistory, { action: nextAction, opponentAction: nextOpponentAction }]);\n      setColors(nextColors);\n      setOpponentColor(OpponentColors[outcome]);\n      setOpponentAction(nextOpponentAction);\n      onOutcome(outcome);\n      setShowOpponent(true);\n    }, OPPONENT_DELAY);\n  };\n\n  const onClick = ({ currentTarget: { id: action } }) => showOpponent && executeRound(action);\n\n  return (\n    <Container>\n      <Grid columns={2} centered>\n        <GridColumn mobile={3}>\n          <ButtonContainer>\n            <ButtonWrapper id={Actions.ROCK} color={colors[Actions.ROCK]} onClick={onClick} />\n            <ButtonWrapper id={Actions.PAPER} color={colors[Actions.PAPER]} onClick={onClick} />\n            <ButtonWrapper id={Actions.SCISSORS} color={colors[Actions.SCISSORS]} onClick={onClick} />\n          </ButtonContainer>\n        </GridColumn>\n        <GridColumn mobile={3} verticalAlign={'middle'}>\n          <Transition visible={showOpponent && !isNull(opponentAction)} transitionOnMount>\n            <ButtonContainer>\n              <StyledButton\n                size={'large'}\n                id={'opponent'}\n                icon={opponentAction && `hand ${opponentAction}`}\n                color={opponentColor}\n              />\n            </ButtonContainer>\n          </Transition>\n        </GridColumn>\n      </Grid>\n    </Container>\n  );\n};\n","import React from 'react';\nimport { Modal, ModalActions, ModalContent, ModalHeader } from 'semantic-ui-react';\n\nexport const ModalWrapper = ({ open, actions, header, content }) => {\n  return (\n    <Modal basic closeOnDimmerClick={false} closeOnEscape={false} open={open} size='tiny'>\n      <ModalHeader>{header}</ModalHeader>\n      <ModalContent>{content}</ModalContent>\n      <ModalActions>{actions}</ModalActions>\n    </Modal>\n  );\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Button, Container, Icon } from 'semantic-ui-react';\n\nimport { ModalWrapper } from 'main/webapp/components/wrappers/ModalWrapper';\n\nexport const SuccessModal = ({ open, onConfirm, onDeny }) => {\n  return (\n    <ModalWrapper\n      open={open}\n      header={<FormattedMessage id={'app.rockPaperScissors.levelSuccess.header'} />}\n      content={<FormattedMessage id={'app.rockPaperScissors.levelSuccess.content'} />}\n      actions={\n        <Container>\n          <Button basic color='red' inverted onClick={onDeny}>\n            <Icon name='remove' />\n            <FormattedMessage id={'app.rockPaperScissors.levelSuccess.deny'} />\n          </Button>\n          <Button color='green' inverted onClick={onConfirm}>\n            <Icon name='checkmark' />\n            <FormattedMessage id={'app.rockPaperScissors.levelSuccess.confirm'} />\n          </Button>\n        </Container>\n      }\n    />\n  );\n};\n\nexport const FailureModal = ({ open, onConfirm }) => {\n  return (\n    <ModalWrapper\n      open={open}\n      header={<FormattedMessage id={'app.rockPaperScissors.levelFailure.header'} />}\n      content={<FormattedMessage id={'app.rockPaperScissors.levelFailure.content'} />}\n      actions={\n        <Container>\n          <Button inverted onClick={onConfirm}>\n            <Icon name='checkmark' />\n            <FormattedMessage id={'app.rockPaperScissors.levelFailure.confirm'} />\n          </Button>\n        </Container>\n      }\n    />\n  );\n};\n\nexport const LevelsCompleteModal = ({ open, onConfirm }) => {\n  return (\n    <ModalWrapper\n      open={open}\n      header={<FormattedMessage id={'app.rockPaperScissors.levelsComplete.header'} />}\n      content={<FormattedMessage id={'app.rockPaperScissors.levelsComplete.content'} />}\n      actions={\n        <Container>\n          <Button color='green' inverted onClick={onConfirm}>\n            <Icon name='checkmark' />\n            <FormattedMessage id={'app.rockPaperScissors.levelsComplete.confirm'} />\n          </Button>\n        </Container>\n      }\n    />\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Grid, GridRow, Header, Segment } from 'semantic-ui-react';\nimport { RockPaperScissors } from 'main/webapp/components/rock-paper-scissors/RockPaperScissors';\nimport { OPPONENT_DELAY, Outcomes } from 'main/webapp/utilities/RockPaperScissorsUtility';\nimport { Strategies } from 'main/webapp/components/rock-paper-scissors/RockPaperScissorsStrategies';\nimport {\n  FailureModal,\n  LevelsCompleteModal,\n  SuccessModal,\n} from 'main/webapp/components/rock-paper-scissors/RockPaperScissorsModals';\n\nconst SCORE_LIMIT = 5;\n\nconst ScoreBoard = ({ score, opponentScore }) => (\n  <Segment compact>\n    <FormattedMessage id={'app.rockPaperScissors.scoreBoard.result'} values={{ score, opponentScore }} />\n  </Segment>\n);\n\nconst LevelDisplay = ({ level }) => (\n  <Header size={'medium'} textAlign={'center'}>\n    <FormattedMessage id={'app.rockPaperScissors.scoreBoard.level'} values={{ level }} />\n  </Header>\n);\n\nexport const RockPaperScissorsBoard = () => {\n  const [level, setLevel] = useState(1);\n  const [score, setScore] = useState(0);\n  const [opponentScore, setOpponentScore] = useState(0);\n  const [showSuccessModal, setShowSuccessModal] = useState(false);\n  const [showFailureModal, setShowFailureModal] = useState(false);\n  const [showLevelsCompleteModal, setShowLevelsCompleteModal] = useState(false);\n\n  useEffect(() => {\n    if (score === SCORE_LIMIT && level < Object.keys(Strategies).length) {\n      setTimeout(() => setShowSuccessModal(true), OPPONENT_DELAY);\n    }\n  }, [score, level]);\n\n  useEffect(() => {\n    if (score === SCORE_LIMIT && level === Object.keys(Strategies).length) {\n      setTimeout(() => setShowLevelsCompleteModal(true), OPPONENT_DELAY);\n    }\n  }, [score, level]);\n\n  useEffect(() => {\n    if (opponentScore === SCORE_LIMIT) {\n      setTimeout(() => setShowFailureModal(true), OPPONENT_DELAY);\n    }\n  }, [opponentScore]);\n\n  const onOutcome = outcome => {\n    outcome === Outcomes.WIN && setScore(score + 1);\n    outcome === Outcomes.DEFEAT && setOpponentScore(opponentScore + 1);\n  };\n\n  const onConfirmSuccess = () => {\n    setShowSuccessModal(false);\n    setLevel(level + 1);\n    resetScore();\n  };\n\n  const onDenySuccess = () => {\n    setShowSuccessModal(false);\n    resetScore();\n  };\n\n  const onConfirmFailure = () => {\n    setShowFailureModal(false);\n    setLevel(1);\n    resetScore();\n  };\n\n  const onConfirmLevelsComplete = () => {\n    setShowLevelsCompleteModal(false);\n    setLevel(1);\n    resetScore();\n  };\n\n  const resetScore = () => {\n    setScore(0);\n    setOpponentScore(0);\n  };\n\n  return (\n    <Grid centered columns={1}>\n      <GridRow>\n        <LevelDisplay level={level} />\n      </GridRow>\n      <GridRow>\n        <ScoreBoard score={score} opponentScore={opponentScore} />\n      </GridRow>\n      <GridRow>\n        <RockPaperScissors onOutcome={onOutcome} level={level} />\n      </GridRow>\n      <SuccessModal open={showSuccessModal} onConfirm={onConfirmSuccess} onDeny={onDenySuccess} />\n      <FailureModal open={showFailureModal} onConfirm={onConfirmFailure} />\n      <LevelsCompleteModal open={showLevelsCompleteModal} onConfirm={onConfirmLevelsComplete} />\n    </Grid>\n  );\n};\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { Container } from 'semantic-ui-react';\n\nimport 'semantic-ui-css/semantic.min.css';\n\nimport { MainMenu } from 'main/webapp/components/MainMenu';\nimport { RockPaperScissorsBoard } from 'main/webapp/components/rock-paper-scissors/RockPaperScissorsBoard';\nimport { JOKES, ROCK_PAPER_SCISSORS } from 'main/webapp/Routes';\n\nconst App = () => (\n  <Container>\n    <MainMenu />\n    <Switch>\n      <Route path={ROCK_PAPER_SCISSORS}>\n        <RockPaperScissorsBoard />\n      </Route>\n      <Route path={JOKES}>Joke</Route>\n    </Switch>\n  </Container>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { IntlProvider } from 'react-intl';\nimport { Provider } from 'react-redux';\n\nimport store from 'main/webapp/store';\nimport App from 'main/webapp/App';\nimport messages from 'main/webapp/translations/en.json';\nimport { BASE_NAME } from 'main/webapp/Routes';\n\nReactDOM.render(\n  <BrowserRouter basename={BASE_NAME}>\n    <Provider store={store}>\n      <IntlProvider locale={'en'} messages={messages}>\n        <App />\n      </IntlProvider>\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}