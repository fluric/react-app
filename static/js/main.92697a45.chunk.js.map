{"version":3,"sources":["main/webapp/store/initialState.js","main/webapp/store/index.js","main/webapp/components/SideMenu.js","main/webapp/components/RockPaperScissors.style.js","main/webapp/components/RockPaperScissors.js","main/webapp/App.js","index.js"],"names":["initialState","rootReducer","reduceReducers","map","reducer","produce","draft","action","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","MainMenu","Menu","direction","inverted","Item","Icon","name","id","StyledButton","styled","Button","ButtonContainer","div","Moves","MovesList","RockPaperScissors","useState","selected","setSelected","opponentMove","setOpponentMove","onClick","target","index","Math","floor","random","Container","Grid","columns","centered","GridColumn","mobile","size","icon","primary","verticalAlign","Transition","visible","isNull","App","ReactDOM","render","locale","messages","document","getElementById"],"mappings":"yTAAaA,EAAe,GCUtBC,E,OAAcC,EAAc,WAAd,GAAeF,GAAf,mBAA4C,GAFvBG,KAAI,SAAAC,GAAO,OAAIC,aAAQ,SAACC,EAAOC,GAAR,OAAmBH,EAAQE,EAAOC,YAMnFC,EAFDC,sBAAYR,EAAaD,EAAcU,8BAAoBC,0BAAgBC,O,oDCR5EC,EAAW,kBACtB,cAACC,EAAA,EAAD,CAAMC,UAAU,MAAMC,UAAQ,EAA9B,SACE,eAACF,EAAA,EAAKG,KAAN,WACE,cAACC,EAAA,EAAD,CAAMC,KAAK,YACX,cAAC,IAAD,CAAkBC,GAAI,2C,+DCLfC,EAAeC,YAAOC,IAAPD,CAAH,uDAIZE,EAAkBF,IAAOG,IAAV,oI,SCFtBC,EACE,OADFA,EAEG,QAFHA,EAGM,WAGNC,EAAY,CAACD,EAAYA,EAAaA,GAE/BE,EAAoB,WAAO,IAAD,EACLC,mBAAS,MADJ,mBAC9BC,EAD8B,KACpBC,EADoB,OAEGF,mBAAS,IAFZ,mBAE9BG,EAF8B,KAEhBC,EAFgB,KAI/BC,EAAU,SAAC,GAAwB,IAAZd,EAAW,EAArBe,OAAUf,GAC3BW,EAAYX,GACZ,IAAMgB,EAAQC,KAAKC,MAAsB,EAAhBD,KAAKE,UAC9BN,EAAgBN,EAAUS,KAG5B,OACE,cAACI,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAMC,QAAS,EAAGC,UAAQ,EAA1B,UACE,cAACC,EAAA,EAAD,CAAYC,OAAQ,EAApB,SACE,eAACrB,EAAD,WACE,cAACH,EAAD,CACEyB,KAAM,QACN1B,GAAIM,EACJqB,KAAK,YACLb,QAASA,EACTc,QAASlB,IAAaJ,IAExB,cAACL,EAAD,CACEyB,KAAM,QACN1B,GAAIM,EACJqB,KAAK,aACLb,QAASA,EACTc,QAASlB,IAAaJ,IAExB,cAACL,EAAD,CACEyB,KAAM,QACN1B,GAAIM,EACJqB,KAAK,gBACLb,QAASA,EACTc,QAASlB,IAAaJ,SAI5B,cAACkB,EAAA,EAAD,CAAYC,OAAQ,EAAGI,cAAe,SAAtC,SACE,cAACC,EAAA,EAAD,CAAYC,SAAUC,iBAAOtB,GAA7B,SACE,cAACT,EAAD,CAAc0B,KAAI,eAAUf,GAAgBc,KAAM,oBCvC/CO,EAPH,kBACV,eAACb,EAAA,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,Q,SCDJc,IAASC,OACP,cAAC,IAAD,CAAU/C,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAcgD,OAAQ,KAAMC,SAAUA,EAAtC,SACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.92697a45.chunk.js","sourcesContent":["export const initialState = {};\n","import { composeWithDevTools } from 'redux-devtools-extension';\nimport { applyMiddleware, createStore } from 'redux';\nimport produce from 'immer';\nimport thunkMiddleware from 'redux-thunk';\nimport reduceReducers from 'reduce-reducers';\n\nimport { initialState } from 'main/webapp/store/initialState';\n\nconst withProduce = reducers => reducers.map(reducer => produce((draft, action) => reducer(draft, action)));\n\nconst rootReducer = reduceReducers(initialState, ...withProduce([]));\n\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(thunkMiddleware)));\n\nexport default store;\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Icon, Menu } from 'semantic-ui-react';\n\nexport const MainMenu = () => (\n  <Menu direction='top' inverted>\n    <Menu.Item>\n      <Icon name='gamepad' />\n      <FormattedMessage id={'app.menu.label.rockPaperScissors'} />\n    </Menu.Item>\n  </Menu>\n);\n","import { Button } from 'semantic-ui-react';\nimport styled from 'styled-components';\n\nexport const StyledButton = styled(Button)`\n  margin: 5px !important;\n`;\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n`;\n","import React, { useState } from 'react';\nimport { Container, Grid, GridColumn, Transition } from 'semantic-ui-react';\nimport { ButtonContainer, StyledButton } from 'main/webapp/components/RockPaperScissors.style';\nimport { isNull } from 'lodash';\n\nconst Moves = {\n  ROCK: 'rock',\n  PAPER: 'paper',\n  SCISSORS: 'scissors',\n};\n\nconst MovesList = [Moves.ROCK, Moves.PAPER, Moves.SCISSORS];\n\nexport const RockPaperScissors = () => {\n  const [selected, setSelected] = useState(null);\n  const [opponentMove, setOpponentMove] = useState('');\n\n  const onClick = ({ target: { id } }) => {\n    setSelected(id);\n    const index = Math.floor(Math.random() * 3);\n    setOpponentMove(MovesList[index]);\n  };\n\n  return (\n    <Container>\n      <Grid columns={2} centered>\n        <GridColumn mobile={3}>\n          <ButtonContainer>\n            <StyledButton\n              size={'large'}\n              id={Moves.ROCK}\n              icon='hand rock'\n              onClick={onClick}\n              primary={selected === Moves.ROCK}\n            />\n            <StyledButton\n              size={'large'}\n              id={Moves.PAPER}\n              icon='hand paper'\n              onClick={onClick}\n              primary={selected === Moves.PAPER}\n            />\n            <StyledButton\n              size={'large'}\n              id={Moves.SCISSORS}\n              icon='hand scissors'\n              onClick={onClick}\n              primary={selected === Moves.SCISSORS}\n            />\n          </ButtonContainer>\n        </GridColumn>\n        <GridColumn mobile={3} verticalAlign={'middle'}>\n          <Transition visible={!isNull(selected)}>\n            <StyledButton icon={`hand ${opponentMove}`} size={'large'} />\n          </Transition>\n        </GridColumn>\n      </Grid>\n    </Container>\n  );\n};\n","import React from 'react';\nimport { Container } from 'semantic-ui-react';\n\nimport 'semantic-ui-css/semantic.min.css';\nimport { MainMenu } from 'main/webapp/components/SideMenu';\nimport { RockPaperScissors } from 'main/webapp/components/RockPaperScissors';\n\nconst App = () => (\n  <Container>\n    <MainMenu />\n    <RockPaperScissors />\n  </Container>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { IntlProvider } from 'react-intl';\nimport { Provider } from 'react-redux';\n\nimport store from 'main/webapp/store';\nimport App from 'main/webapp/App';\nimport messages from 'main/webapp/translations/en.json';\n\nReactDOM.render(\n  <Provider store={store}>\n    <IntlProvider locale={'en'} messages={messages}>\n      <App />\n    </IntlProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}