{"version":3,"sources":["main/webapp/store/initialState.js","main/webapp/store/constants/JokesConstants.js","main/webapp/store/reducers/JokesReducer.js","main/webapp/store/constants/AppConstants.js","main/webapp/store/selectors/AppSelectors.js","main/webapp/store/reducers/AppReducer.js","main/webapp/store/index.js","main/webapp/Routes.js","main/webapp/components/MainMenu.js","main/webapp/components/rock-paper-scissors/RockPaperScissors.style.js","main/webapp/components/rock-paper-scissors/RockPaperScissorsUtility.js","main/webapp/components/rock-paper-scissors/RockPaperScissorsStrategies.js","main/webapp/images/bargrakIronFist.jpg","main/webapp/images/gothmogTheDetermined.jpg","main/webapp/images/greedyGolum.jpg","main/webapp/images/cunningSaruman.jpg","main/webapp/components/rock-paper-scissors/RockPaperScissorsConfig.js","main/webapp/images/allKnowingSauron.jpg","main/webapp/images/denethorTheUnstable.png","main/webapp/images/shokkTheReluctant.jpg","main/webapp/images/carefulShelob.jpg","main/webapp/images/smaugMasterOfSkies.jpeg","main/webapp/components/rock-paper-scissors/RockPaperScissors.js","main/webapp/components/wrappers/ModalWrapper.js","main/webapp/components/rock-paper-scissors/RockPaperScissorsModals.js","main/webapp/components/rock-paper-scissors/RockPaperScissorsBoard.js","main/webapp/store/selectors/JokesSelectors.js","main/webapp/store/LoadingUtility.js","main/webapp/store/action-creators/AppActionCreator.js","main/webapp/api/JokesAPI.js","main/webapp/store/action-creators/JokesActionCreator.js","main/webapp/components/jokes/Constants.js","main/webapp/components/jokes/Jokes.style.js","main/webapp/components/jokes/Joke.js","main/webapp/components/jokes/JokesBoard.js","main/webapp/App.js","index.js"],"names":["initialState","app","isLoading","loadingStack","jokes","categories","SET_CATEGORIES","JokesReducer","draft","action","type","payload","START_LOADING","END_LOADING","getIsLoading","state","get","getLoadingStack","AppReducer","nextLoadingStack","rootReducer","reduceReducers","map","reducer","produce","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","ROCK_PAPER_SCISSORS","JOKES","MainMenu","Menu","direction","inverted","Item","to","Icon","name","id","StyledButton","styled","Button","ButtonContainer","div","OPPONENT_DELAY","Container","Actions","ActionList","Outcomes","Colors","DEFAULT","OpponentColors","defaultColors","getRandomAction","index","random","opponents","1","strategy","image","bargrak","2","gothmog","3","actionHistory","length","last","golum","4","nth","saruman","ButtonWrapper","color","onClick","size","icon","RockPaperScissors","onOutcome","level","useState","colors","setColors","opponentAction","setOpponentAction","opponentColor","setOpponentColor","showOpponent","setShowOpponent","setActionHistory","getOpponentAction","useEffect","resetComponent","executeRound","nextAction","nextOpponentAction","outcome","getOutcome","nextColors","setTimeout","currentTarget","Grid","columns","centered","GridColumn","width","verticalAlign","Transition","visible","isNull","transitionOnMount","ModalWrapper","open","actions","header","content","Modal","basic","closeOnDimmerClick","closeOnEscape","ModalHeader","ModalContent","ModalActions","SuccessModal","onConfirm","onDeny","FailureModal","LevelsCompleteModal","ScoreBoard","score","opponentScore","Segment","compact","values","LevelDisplay","Header","textAlign","RockPaperScissorsBoard","setLevel","setScore","setOpponentScore","showSuccessModal","setShowSuccessModal","showFailureModal","setShowFailureModal","showLevelsCompleteModal","setShowLevelsCompleteModal","Object","keys","resetScore","GridRow","Image","src","getCategories","withLoading","dispatch","then","response","INSTANCE","axios","create","baseURL","timeout","headers","process","loadJokeCategories","data","setCategories","jokeTypes","StyledSegment","JokesBoard","props","joke","setup","delivery","showDelivery","setShowDelivery","singlePartJoke","SinglePartJoke","TwoPartJoke","Divider","section","useSelector","useDispatch","selectedCategory","setSelectedCategory","setJoke","dropdownOptions","category","key","text","value","Dropdown","placeholder","selection","options","onChange","event","primary","disabled","isEmpty","Joke","App","Loader","active","path","ReactDOM","render","locale","messages","document","getElementById"],"mappings":"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","file":"static/js/main.589ee4e1.chunk.js","sourcesContent":["export const initialState = {\n  app: {\n    isLoading: false,\n    loadingStack: 0,\n  },\n  jokes: {\n    categories: [],\n  },\n};\n","export const SET_CATEGORIES = 'SET_CATEGORIES';\n","import { SET_CATEGORIES } from 'main/webapp/store/constants/JokesConstants';\n\nconst JokesReducer = (draft, action) => {\n  switch (action.type) {\n    case SET_CATEGORIES:\n      draft.jokes.categories = action.payload;\n      break;\n  }\n};\n\nexport default JokesReducer;\n","export const START_LOADING = 'START_LOADING';\nexport const END_LOADING = 'END_LOADING';\n","import { get } from 'lodash';\n\nexport const getIsLoading = state => get(state, 'app.isLoading');\n\nexport const getLoadingStack = state => get(state, 'app.loadingStack');\n","import { END_LOADING, START_LOADING } from 'main/webapp/store/constants/AppConstants';\nimport { getLoadingStack } from 'main/webapp/store/selectors/AppSelectors';\n\nconst AppReducer = (draft, action) => {\n  switch (action.type) {\n    case START_LOADING: {\n      draft.app.loadingStack = getLoadingStack(draft) + 1;\n      draft.app.isLoading = true;\n      break;\n    }\n    case END_LOADING: {\n      const nextLoadingStack = getLoadingStack(draft) - 1;\n      draft.app.loadingStack = nextLoadingStack;\n\n      if (nextLoadingStack === 0) {\n        draft.app.isLoading = false;\n      }\n      break;\n    }\n  }\n};\n\nexport default AppReducer;\n","import { composeWithDevTools } from 'redux-devtools-extension';\nimport { applyMiddleware, createStore } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport reduceReducers from 'reduce-reducers';\nimport produce from 'immer';\n\nimport { initialState } from 'main/webapp/store/initialState';\nimport JokesReducer from 'main/webapp/store/reducers/JokesReducer';\nimport AppReducer from 'main/webapp/store/reducers/AppReducer';\n\nconst withProduce = reducers => reducers.map(reducer => produce((draft, action) => reducer(draft, action)));\n\nconst rootReducer = reduceReducers(initialState, ...withProduce([AppReducer, JokesReducer]));\n\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(thunkMiddleware)));\n\nexport default store;\n","export const BASE_NAME = '/react-app';\nexport const ROCK_PAPER_SCISSORS = '/rock-paper-scissors';\nexport const JOKES = '/jokes';\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\nimport { Icon, Menu } from 'semantic-ui-react';\n\nimport { JOKES, ROCK_PAPER_SCISSORS } from 'main/webapp/Routes';\n\nconst MainMenu = () => (\n  <Menu direction='top' inverted>\n    <Menu.Item>\n      <Link to={ROCK_PAPER_SCISSORS}>\n        <Icon name='gamepad' />\n        <FormattedMessage id={'app.menu.label.rockPaperScissors'} />\n      </Link>\n    </Menu.Item>\n    <Menu.Item>\n      <Link to={JOKES}>\n        <Icon name='talk' />\n        <FormattedMessage id={'app.menu.label.jokes'} />\n      </Link>\n    </Menu.Item>\n  </Menu>\n);\n\nexport default MainMenu;\n","import { Button, Container } from 'semantic-ui-react';\nimport styled from 'styled-components';\n\nexport const StyledButton = styled(Button)`\n  margin: 5px !important;\n`;\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const StyledContainer = styled(Container)`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n`;\n","import { random } from 'lodash';\n\nexport const OPPONENT_DELAY = 500; // ms\n\nexport const Actions = {\n  ROCK: 'rock',\n  PAPER: 'paper',\n  SCISSORS: 'scissors',\n};\n\nexport const ActionList = [Actions.ROCK, Actions.PAPER, Actions.SCISSORS];\n\nexport const Outcomes = {\n  WIN: 'win',\n  DRAW: 'draw',\n  DEFEAT: 'defeat',\n};\n\nexport const Colors = {\n  DEFAULT: null,\n  [Outcomes.WIN]: 'green',\n  [Outcomes.DRAW]: 'blue',\n  [Outcomes.DEFEAT]: 'red',\n};\n\nexport const OpponentColors = {\n  DEFAULT: null,\n  [Outcomes.DEFEAT]: 'green',\n  [Outcomes.DRAW]: 'blue',\n  [Outcomes.WIN]: 'red',\n};\n\nexport const defaultColors = {\n  [Actions.PAPER]: Colors.DEFAULT,\n  [Actions.ROCK]: Colors.DEFAULT,\n  [Actions.SCISSORS]: Colors.DEFAULT,\n};\n\nexport const getOutcome = (action, opponentAction) => {\n  if (action === opponentAction) {\n    return Outcomes.DRAW;\n  }\n  if (action === Actions.PAPER) {\n    return opponentAction === Actions.SCISSORS ? Outcomes.DEFEAT : Outcomes.WIN;\n  }\n  if (action === Actions.SCISSORS) {\n    return opponentAction === Actions.ROCK ? Outcomes.DEFEAT : Outcomes.WIN;\n  }\n  if (action === Actions.ROCK) {\n    return opponentAction === Actions.PAPER ? Outcomes.DEFEAT : Outcomes.WIN;\n  }\n};\n\nexport const getOpponentAction = () => {\n  const index = random(2);\n  return ActionList[index];\n};\n","import { last, nth, random } from 'lodash';\n\nimport { ActionList, Actions } from 'main/webapp/components/rock-paper-scissors/RockPaperScissorsUtility';\n\nexport const getDummyAction = () => {\n  return ActionList[0];\n};\n\nexport const getGreedyAction = actionHistory => {\n  if (actionHistory.length === 0) {\n    return getRandomAction();\n  }\n  const lastAction = last(actionHistory).action;\n\n  switch (lastAction) {\n    case Actions.SCISSORS:\n      return Actions.ROCK;\n    case Actions.ROCK:\n      return Actions.PAPER;\n    case Actions.PAPER:\n      return Actions.SCISSORS;\n  }\n};\n\nexport const getTit4TatAction = actionHistory => {\n  if (actionHistory.length === 0) {\n    return getRandomAction();\n  }\n  return last(actionHistory).action;\n};\n\nexport const getTit42TatAction = actionHistory => {\n  if (actionHistory.length < 2) {\n    return getRandomAction();\n  }\n  return nth(actionHistory, -2).action;\n};\n\nexport const getNoScissorsAction = () => {\n  const index = random(1);\n  return ActionList[index];\n};\n\nexport const getRandomAction = () => {\n  const index = random(2);\n  return ActionList[index];\n};\n","export default __webpack_public_path__ + \"static/media/bargrakIronFist.74f78560.jpg\";","export default __webpack_public_path__ + \"static/media/gothmogTheDetermined.08afe0f9.jpg\";","export default __webpack_public_path__ + \"static/media/greedyGolum.99202a76.jpg\";","export default __webpack_public_path__ + \"static/media/cunningSaruman.d7bfec46.jpg\";","import {\n  getDummyAction,\n  getGreedyAction,\n  getNoScissorsAction,\n  getTit42TatAction,\n} from 'main/webapp/components/rock-paper-scissors/RockPaperScissorsStrategies';\nimport bargrak from 'main/webapp/images/bargrakIronFist.jpg';\nimport gothmog from 'main/webapp/images/gothmogTheDetermined.jpg';\nimport golum from 'main/webapp/images/greedyGolum.jpg';\nimport saruman from 'main/webapp/images/cunningSaruman.jpg';\nimport sauron from 'main/webapp/images/allKnowingSauron.jpg';\nimport denethor from 'main/webapp/images/denethorTheUnstable.png';\nimport shokk from 'main/webapp/images/shokkTheReluctant.jpg';\nimport shelob from 'main/webapp/images/carefulShelob.jpg';\nimport smaug from 'main/webapp/images/smaugMasterOfSkies.jpeg';\n\nexport const opponents = {\n  1: {\n    strategy: getDummyAction,\n    image: bargrak,\n    name: 'Bargrak Iron Fist',\n  },\n  // 2: {\n  //   strategy:, //TODO: play the one that was won the most recent with\n  //   image: shokk,\n  //   name: 'Shokk the Reluctant'\n  // }\n  // 3: {\n  //   strategy:, //TODO: always changing\n  //   image: denethor,\n  //   name: 'Denethor the Unstable'\n  // }\n  2: {\n    strategy: getNoScissorsAction,\n    image: gothmog,\n    name: 'Gothmog the Determined',\n  },\n  3: {\n    strategy: getGreedyAction,\n    image: golum,\n    name: 'Greedy Golum',\n  },\n  4: {\n    strategy: getTit42TatAction,\n    image: saruman,\n    name: 'Cunning Saruman',\n  },\n  // 7: {\n  //   strategy: , //TODO: balanced play, always play what was chosen the least often, otherwise random\n  //   image: smaug,\n  //   name: 'Smaug Master of Skies',\n  // },\n  // 8: {\n  //   strategy: , //TODO: play the move that it lost the longest ago\n  //   image: shelob,\n  //   name: 'Careful Shelob',\n  // },\n  // 9: {\n  //   strategy: ,//TODO: statistical most likely win -> what was played the most -> take winning move\n  //   image: sauron,\n  //   name: 'All knowing Sauron',\n  // },\n};\n","export default __webpack_public_path__ + \"static/media/allKnowingSauron.43f96d9f.jpg\";","export default __webpack_public_path__ + \"static/media/denethorTheUnstable.2ff8084d.png\";","export default __webpack_public_path__ + \"static/media/shokkTheReluctant.89fc0515.jpg\";","export default __webpack_public_path__ + \"static/media/carefulShelob.6f102353.jpg\";","export default __webpack_public_path__ + \"static/media/smaugMasterOfSkies.03a21820.jpeg\";","import React, { useEffect, useState } from 'react';\nimport { Container, Grid, GridColumn, Transition } from 'semantic-ui-react';\nimport { isNull } from 'lodash';\n\nimport {\n  ButtonContainer,\n  StyledButton,\n  StyledContainer,\n} from 'main/webapp/components/rock-paper-scissors/RockPaperScissors.style';\nimport {\n  Actions,\n  Colors,\n  defaultColors,\n  getOutcome,\n  OPPONENT_DELAY,\n  OpponentColors,\n} from 'main/webapp/components/rock-paper-scissors/RockPaperScissorsUtility';\nimport { opponents } from 'main/webapp/components/rock-paper-scissors/RockPaperScissorsConfig';\n\nconst ButtonWrapper = ({ id, color, onClick }) => (\n  <StyledButton size={'large'} id={id} icon={`hand ${id}`} onClick={onClick} color={color} />\n);\n\nexport const RockPaperScissors = ({ onOutcome, level }) => {\n  const [colors, setColors] = useState(defaultColors);\n  const [opponentAction, setOpponentAction] = useState(null);\n  const [opponentColor, setOpponentColor] = useState(null);\n  const [showOpponent, setShowOpponent] = useState(true);\n  const [actionHistory, setActionHistory] = useState([]);\n\n  const getOpponentAction = opponents[level].strategy;\n\n  useEffect(() => resetComponent(), [level]);\n\n  const resetComponent = () => {\n    setActionHistory([]);\n    setColors(defaultColors);\n    setOpponentAction(null);\n    setOpponentColor(null);\n    setShowOpponent(true);\n  };\n\n  const executeRound = nextAction => {\n    const nextOpponentAction = getOpponentAction(actionHistory);\n    const outcome = getOutcome(nextAction, nextOpponentAction);\n    const nextColors = { ...defaultColors, [nextAction]: Colors[outcome] };\n\n    // prepare transition\n    setShowOpponent(false);\n    setColors(defaultColors);\n\n    // execute changes after transition\n    setTimeout(() => {\n      setActionHistory([...actionHistory, { action: nextAction, opponentAction: nextOpponentAction }]);\n      setColors(nextColors);\n      setOpponentColor(OpponentColors[outcome]);\n      setOpponentAction(nextOpponentAction);\n      onOutcome(outcome);\n      setShowOpponent(true);\n    }, OPPONENT_DELAY);\n  };\n\n  const onClick = ({ currentTarget: { id: action } }) => showOpponent && executeRound(action);\n\n  return (\n    <Container>\n      <Grid columns={2} centered>\n        <GridColumn width={'100%'}>\n          <ButtonContainer>\n            <ButtonWrapper id={Actions.ROCK} color={colors[Actions.ROCK]} onClick={onClick} />\n            <ButtonWrapper id={Actions.PAPER} color={colors[Actions.PAPER]} onClick={onClick} />\n            <ButtonWrapper id={Actions.SCISSORS} color={colors[Actions.SCISSORS]} onClick={onClick} />\n          </ButtonContainer>\n        </GridColumn>\n        <GridColumn verticalAlign={'middle'} width={'100%'}>\n          <Transition visible={showOpponent && !isNull(opponentAction)} transitionOnMount>\n            <ButtonContainer>\n              <StyledButton\n                size={'large'}\n                id={'opponent'}\n                icon={opponentAction && `hand ${opponentAction}`}\n                color={opponentColor}\n              />\n            </ButtonContainer>\n          </Transition>\n        </GridColumn>\n      </Grid>\n    </Container>\n  );\n};\n","import React from 'react';\nimport { Modal, ModalActions, ModalContent, ModalHeader } from 'semantic-ui-react';\n\nexport const ModalWrapper = ({ open, actions, header, content }) => {\n  return (\n    <Modal basic closeOnDimmerClick={false} closeOnEscape={false} open={open} size='tiny'>\n      <ModalHeader>{header}</ModalHeader>\n      <ModalContent>{content}</ModalContent>\n      <ModalActions>{actions}</ModalActions>\n    </Modal>\n  );\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Button, Container, Icon } from 'semantic-ui-react';\n\nimport { ModalWrapper } from 'main/webapp/components/wrappers/ModalWrapper';\n\nexport const SuccessModal = ({ open, onConfirm, onDeny }) => {\n  return (\n    <ModalWrapper\n      open={open}\n      header={<FormattedMessage id={'app.rockPaperScissors.levelSuccess.header'} />}\n      content={<FormattedMessage id={'app.rockPaperScissors.levelSuccess.content'} />}\n      actions={\n        <Container>\n          <Button basic color='red' inverted onClick={onDeny}>\n            <Icon name='remove' />\n            <FormattedMessage id={'app.rockPaperScissors.levelSuccess.deny'} />\n          </Button>\n          <Button color='green' inverted onClick={onConfirm}>\n            <Icon name='checkmark' />\n            <FormattedMessage id={'app.rockPaperScissors.levelSuccess.confirm'} />\n          </Button>\n        </Container>\n      }\n    />\n  );\n};\n\nexport const FailureModal = ({ open, onConfirm }) => {\n  return (\n    <ModalWrapper\n      open={open}\n      header={<FormattedMessage id={'app.rockPaperScissors.levelFailure.header'} />}\n      content={<FormattedMessage id={'app.rockPaperScissors.levelFailure.content'} />}\n      actions={\n        <Container>\n          <Button inverted onClick={onConfirm}>\n            <Icon name='checkmark' />\n            <FormattedMessage id={'app.rockPaperScissors.levelFailure.confirm'} />\n          </Button>\n        </Container>\n      }\n    />\n  );\n};\n\nexport const LevelsCompleteModal = ({ open, onConfirm }) => {\n  return (\n    <ModalWrapper\n      open={open}\n      header={<FormattedMessage id={'app.rockPaperScissors.levelsComplete.header'} />}\n      content={<FormattedMessage id={'app.rockPaperScissors.levelsComplete.content'} />}\n      actions={\n        <Container>\n          <Button color='green' inverted onClick={onConfirm}>\n            <Icon name='checkmark' />\n            <FormattedMessage id={'app.rockPaperScissors.levelsComplete.confirm'} />\n          </Button>\n        </Container>\n      }\n    />\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Grid, GridRow, Header, Image, Segment } from 'semantic-ui-react';\nimport { RockPaperScissors } from 'main/webapp/components/rock-paper-scissors/RockPaperScissors';\nimport { OPPONENT_DELAY, Outcomes } from 'main/webapp/components/rock-paper-scissors/RockPaperScissorsUtility';\nimport {\n  FailureModal,\n  LevelsCompleteModal,\n  SuccessModal,\n} from 'main/webapp/components/rock-paper-scissors/RockPaperScissorsModals';\nimport { opponents } from 'main/webapp/components/rock-paper-scissors/RockPaperScissorsConfig';\n\nconst SCORE_LIMIT = 5;\n\nconst ScoreBoard = ({ score, opponentScore }) => (\n  <Segment compact>\n    <FormattedMessage id={'app.rockPaperScissors.scoreBoard.result'} values={{ score, opponentScore }} />\n  </Segment>\n);\n\nconst LevelDisplay = ({ level }) => (\n  <Header size={'medium'} textAlign={'center'}>\n    <FormattedMessage id={'app.rockPaperScissors.scoreBoard.level'} values={{ level }} />\n  </Header>\n);\n\nconst RockPaperScissorsBoard = () => {\n  const [level, setLevel] = useState(1);\n  const [score, setScore] = useState(0);\n  const [opponentScore, setOpponentScore] = useState(0);\n  const [showSuccessModal, setShowSuccessModal] = useState(false);\n  const [showFailureModal, setShowFailureModal] = useState(false);\n  const [showLevelsCompleteModal, setShowLevelsCompleteModal] = useState(false);\n\n  useEffect(() => {\n    if (score === SCORE_LIMIT && level < Object.keys(opponents).length) {\n      setTimeout(() => setShowSuccessModal(true), OPPONENT_DELAY);\n    }\n  }, [score, level]);\n\n  useEffect(() => {\n    if (score === SCORE_LIMIT && level === Object.keys(opponents).length) {\n      setTimeout(() => setShowLevelsCompleteModal(true), OPPONENT_DELAY);\n    }\n  }, [score, level]);\n\n  useEffect(() => {\n    if (opponentScore === SCORE_LIMIT) {\n      setTimeout(() => setShowFailureModal(true), OPPONENT_DELAY);\n    }\n  }, [opponentScore]);\n\n  const onOutcome = outcome => {\n    outcome === Outcomes.WIN && setScore(score + 1);\n    outcome === Outcomes.DEFEAT && setOpponentScore(opponentScore + 1);\n  };\n\n  const onConfirmSuccess = () => {\n    setShowSuccessModal(false);\n    setLevel(level + 1);\n    resetScore();\n  };\n\n  const onDenySuccess = () => {\n    setShowSuccessModal(false);\n    resetScore();\n  };\n\n  const onConfirmFailure = () => {\n    setShowFailureModal(false);\n    setLevel(1);\n    resetScore();\n  };\n\n  const onConfirmLevelsComplete = () => {\n    setShowLevelsCompleteModal(false);\n    setLevel(1);\n    resetScore();\n  };\n\n  const resetScore = () => {\n    setScore(0);\n    setOpponentScore(0);\n  };\n\n  return (\n    <Grid centered columns={1}>\n      <GridRow>\n        <LevelDisplay level={level} />\n      </GridRow>\n      <GridRow>\n        <ScoreBoard score={score} opponentScore={opponentScore} />\n      </GridRow>\n      <GridRow>\n        <RockPaperScissors onOutcome={onOutcome} level={level} />\n      </GridRow>\n      <GridRow>\n        <Image src={opponents[level].image} size={'small'} />\n      </GridRow>\n      <GridRow>\n        <strong>{opponents[level].name}</strong>\n      </GridRow>\n      <SuccessModal open={showSuccessModal} onConfirm={onConfirmSuccess} onDeny={onDenySuccess} />\n      <FailureModal open={showFailureModal} onConfirm={onConfirmFailure} />\n      <LevelsCompleteModal open={showLevelsCompleteModal} onConfirm={onConfirmLevelsComplete} />\n    </Grid>\n  );\n};\n\nexport default RockPaperScissorsBoard;\n","import { get } from 'lodash';\n\nexport const getCategories = state => get(state, 'jokes.categories');\n","import { endLoading, startLoading } from 'main/webapp/store/action-creators/AppActionCreator';\nimport store from 'main/webapp/store/index';\n\nexport const withLoading = action => {\n  store.dispatch(startLoading());\n\n  return action.then(response => {\n    store.dispatch(endLoading());\n    return response;\n  });\n};\n","import { END_LOADING, START_LOADING } from 'main/webapp/store/constants/AppConstants';\n\nexport const startLoading = () => ({\n  type: START_LOADING,\n});\n\nexport const endLoading = () => ({\n  type: END_LOADING,\n});\n","import axios from 'axios';\nimport { setCategories } from 'main/webapp/store/action-creators/JokesActionCreator';\nimport { withLoading } from 'main/webapp/store/LoadingUtility';\n\nconst INSTANCE = axios.create({\n  baseURL: 'https://jokeapi-v2.p.rapidapi.com',\n  timeout: 1000,\n  headers: { 'x-rapidapi-key': process.env.RAPID_API_KEY },\n});\n\nexport const loadJokeCategories = dispatch =>\n  withLoading(INSTANCE.get('/categories').then(({ data: { categories } }) => dispatch(setCategories(categories))));\n\nexport const loadJoke = category => withLoading(INSTANCE.get(`joke/${category}`));\n","import { SET_CATEGORIES } from 'main/webapp/store/constants/JokesConstants';\n\nexport const setCategories = categories => ({\n  type: SET_CATEGORIES,\n  payload: categories,\n});\n","export const jokeTypes = { SINGLE_PART: 'single', TWO_PART: 'twopart' };\n","import { Segment } from 'semantic-ui-react';\nimport styled from 'styled-components';\n\nexport const StyledSegment = styled(Segment)`\n  max-width: 90%;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { jokeTypes } from 'main/webapp/components/jokes/Constants';\nimport { Divider, GridRow } from 'semantic-ui-react';\nimport { StyledSegment } from 'main/webapp/components/jokes/Jokes.style';\n\nconst DELIVERY_DELAY = 3000; // ms\n\nconst JokesBoard = props => {\n  const { type, joke, setup, delivery } = props.joke;\n  const [showDelivery, setShowDelivery] = useState(false);\n\n  useEffect(() => {\n    setShowDelivery(false);\n    setTimeout(() => setShowDelivery(true), DELIVERY_DELAY);\n  }, [delivery]);\n\n  const singlePartJoke = type === jokeTypes.SINGLE_PART;\n\n  const SinglePartJoke = () => <>{joke}</>;\n\n  const TwoPartJoke = () => (\n    <>\n      {setup}\n      <Divider section />\n      {showDelivery && <>{delivery}</>}\n    </>\n  );\n\n  return (\n    <GridRow>\n      <StyledSegment>{singlePartJoke ? <SinglePartJoke /> : <TwoPartJoke />}</StyledSegment>\n    </GridRow>\n  );\n};\nexport default JokesBoard;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FormattedMessage } from 'react-intl';\nimport { Button, Dropdown, Grid, GridRow } from 'semantic-ui-react';\nimport { isEmpty, isNull } from 'lodash';\n\nimport { getCategories } from 'main/webapp/store/selectors/JokesSelectors';\nimport { loadJoke, loadJokeCategories } from 'main/webapp/api/JokesAPI';\nimport Joke from 'main/webapp/components/jokes/Joke';\n\nconst JokesBoard = () => {\n  const categories = useSelector(getCategories);\n  const dispatch = useDispatch();\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [joke, setJoke] = useState({});\n\n  const dropdownOptions = categories.map(category => ({ key: category, text: category, value: category }));\n\n  useEffect(() => {\n    dispatch(loadJokeCategories);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const onClick = () => loadJoke(selectedCategory).then(({ data }) => setJoke(data));\n\n  return (\n    <Grid centered columns={1}>\n      <GridRow>\n        <Dropdown\n          placeholder='Type'\n          selection\n          options={dropdownOptions}\n          onChange={(event, { value }) => setSelectedCategory(value)}\n          value={selectedCategory}\n        />\n        <Button onClick={onClick} primary disabled={isNull(selectedCategory)}>\n          <FormattedMessage id={'app.jokes.button.text'} />\n        </Button>\n      </GridRow>\n      {!isEmpty(joke) && <Joke joke={joke} />}\n    </Grid>\n  );\n};\nexport default JokesBoard;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { Container, Loader, Modal } from 'semantic-ui-react';\n\nimport 'semantic-ui-css/semantic.min.css';\n\nimport MainMenu from 'main/webapp/components/MainMenu';\nimport RockPaperScissorsBoard from 'main/webapp/components/rock-paper-scissors/RockPaperScissorsBoard';\nimport { JOKES, ROCK_PAPER_SCISSORS } from 'main/webapp/Routes';\nimport JokesBoard from 'main/webapp/components/jokes/JokesBoard';\nimport { getIsLoading } from 'main/webapp/store/selectors/AppSelectors';\n\nconst App = () => {\n  const isLoading = useSelector(getIsLoading);\n\n  return (\n    <Container>\n      <Modal open={isLoading}>\n        <Loader active />\n      </Modal>\n      <MainMenu />\n      <Switch>\n        <Route path={ROCK_PAPER_SCISSORS}>\n          <RockPaperScissorsBoard />\n        </Route>\n        <Route path={JOKES}>\n          <JokesBoard />\n        </Route>\n      </Switch>\n    </Container>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { IntlProvider } from 'react-intl';\nimport { Provider } from 'react-redux';\n\nimport store from 'main/webapp/store';\nimport App from 'main/webapp/App';\nimport messages from 'main/webapp/translations/en.json';\n\nReactDOM.render(\n  <HashRouter>\n    <Provider store={store}>\n      <IntlProvider locale={'en'} messages={messages}>\n        <App />\n      </IntlProvider>\n    </Provider>\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}