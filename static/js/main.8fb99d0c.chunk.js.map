{"version":3,"sources":["main/webapp/store/initialState.js","main/webapp/store/constants/JokesConstants.js","main/webapp/store/reducers/JokesReducer.js","main/webapp/store/constants/AppConstants.js","main/webapp/store/selectors/AppSelectors.js","main/webapp/store/reducers/AppReducer.js","main/webapp/store/index.js","main/webapp/Routes.js","main/webapp/components/MainMenu.js","main/webapp/components/rock-paper-scissors/RockPaperScissors.style.js","main/webapp/components/rock-paper-scissors/RockPaperScissorsUtility.js","main/webapp/components/rock-paper-scissors/RockPaperScissorsStrategies.js","main/webapp/images/bargrakIronFist.jpg","main/webapp/images/gothmogTheUnbalanced.jpg","main/webapp/images/greedyGolum.jpg","main/webapp/images/cunningSaruman.jpg","main/webapp/images/denethorTheUnstable.png","main/webapp/components/rock-paper-scissors/RockPaperScissorsConfig.js","main/webapp/images/shokkTheDetermined.jpg","main/webapp/images/smaugMasterOfSkies.jpeg","main/webapp/images/carefulShelob.jpg","main/webapp/images/allKnowingSauron.jpg","main/webapp/components/rock-paper-scissors/RockPaperScissors.js","main/webapp/components/wrappers/ModalWrapper.js","main/webapp/components/rock-paper-scissors/RockPaperScissorsModals.js","main/webapp/components/rock-paper-scissors/RockPaperScissorsBoard.js","main/webapp/store/selectors/JokesSelectors.js","main/webapp/store/LoadingUtility.js","main/webapp/store/action-creators/AppActionCreator.js","main/webapp/api/JokesAPI.js","main/webapp/store/action-creators/JokesActionCreator.js","main/webapp/components/jokes/Constants.js","main/webapp/components/jokes/Jokes.style.js","main/webapp/components/jokes/Joke.js","main/webapp/components/jokes/JokesBoard.js","main/webapp/App.js","index.js"],"names":["initialState","app","isLoading","loadingStack","jokes","categories","SET_CATEGORIES","JokesReducer","draft","action","type","payload","START_LOADING","END_LOADING","getIsLoading","state","get","getLoadingStack","AppReducer","nextLoadingStack","rootReducer","reduceReducers","map","reducer","produce","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","ROCK_PAPER_SCISSORS","JOKES","MainMenu","Menu","direction","inverted","Item","to","Icon","name","id","StyledButton","styled","Button","ButtonContainer","div","StyledImage","Image","OPPONENT_DELAY","Actions","ActionList","Outcomes","Colors","DEFAULT","OpponentColors","defaultColors","getOutcome","opponentAction","getWinningAction","getRandomAction","index","random","opponents","1","strategy","image","bargrak","2","actionHistory","slice","reverse","3","getEverChangingAction","randomAction","length","last","denethor","4","gothmog","5","lastAction","golum","6","nth","saruman","7","initValues","countedActions","countBy","minimum","Math","min","Object","values","minimumActions","keys","filter","key","sample","8","actions","pull","9","maximum","max","maximumActions","ButtonWrapper","color","onClick","size","icon","RockPaperScissors","onOutcome","level","useState","colors","setColors","setOpponentAction","opponentColor","setOpponentColor","showOpponent","setShowOpponent","setActionHistory","getOpponentAction","useEffect","resetComponent","currentTarget","nextAction","nextOpponentAction","outcome","nextColors","setTimeout","executeRound","Container","Grid","columns","centered","GridColumn","mobile","verticalAlign","Transition","visible","isNull","transitionOnMount","ModalWrapper","open","header","content","Modal","basic","closeOnDimmerClick","closeOnEscape","ModalHeader","ModalContent","ModalActions","SuccessModal","onConfirm","onDeny","FailureModal","LevelsCompleteModal","ScoreBoard","score","opponentScore","Segment","compact","LevelDisplay","Header","textAlign","RockPaperScissorsBoard","setLevel","setScore","setOpponentScore","showSuccessModal","setShowSuccessModal","showFailureModal","setShowFailureModal","showLevelsCompleteModal","setShowLevelsCompleteModal","resetScore","GridRow","src","getCategories","withLoading","dispatch","then","response","INSTANCE","axios","create","baseURL","timeout","headers","process","loadJokeCategories","data","setCategories","jokeTypes","StyledSegment","JokesBoard","props","joke","setup","delivery","showDelivery","setShowDelivery","singlePartJoke","SinglePartJoke","TwoPartJoke","Divider","section","useSelector","useDispatch","selectedCategory","setSelectedCategory","setJoke","dropdownOptions","category","text","value","Dropdown","placeholder","selection","options","onChange","event","primary","disabled","isEmpty","Joke","App","Loader","active","path","ReactDOM","render","locale","messages","document","getElementById"],"mappings":"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","file":"static/js/main.8fb99d0c.chunk.js","sourcesContent":["export const initialState = {\n  app: {\n    isLoading: false,\n    loadingStack: 0,\n  },\n  jokes: {\n    categories: [],\n  },\n};\n","export const SET_CATEGORIES = 'SET_CATEGORIES';\n","import { SET_CATEGORIES } from 'main/webapp/store/constants/JokesConstants';\n\nconst JokesReducer = (draft, action) => {\n  switch (action.type) {\n    case SET_CATEGORIES:\n      draft.jokes.categories = action.payload;\n      break;\n  }\n};\n\nexport default JokesReducer;\n","export const START_LOADING = 'START_LOADING';\nexport const END_LOADING = 'END_LOADING';\n","import { get } from 'lodash';\n\nexport const getIsLoading = state => get(state, 'app.isLoading');\n\nexport const getLoadingStack = state => get(state, 'app.loadingStack');\n","import { END_LOADING, START_LOADING } from 'main/webapp/store/constants/AppConstants';\nimport { getLoadingStack } from 'main/webapp/store/selectors/AppSelectors';\n\nconst AppReducer = (draft, action) => {\n  switch (action.type) {\n    case START_LOADING: {\n      draft.app.loadingStack = getLoadingStack(draft) + 1;\n      draft.app.isLoading = true;\n      break;\n    }\n    case END_LOADING: {\n      const nextLoadingStack = getLoadingStack(draft) - 1;\n      draft.app.loadingStack = nextLoadingStack;\n\n      if (nextLoadingStack === 0) {\n        draft.app.isLoading = false;\n      }\n      break;\n    }\n  }\n};\n\nexport default AppReducer;\n","import { composeWithDevTools } from 'redux-devtools-extension';\nimport { applyMiddleware, createStore } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport reduceReducers from 'reduce-reducers';\nimport produce from 'immer';\n\nimport { initialState } from 'main/webapp/store/initialState';\nimport JokesReducer from 'main/webapp/store/reducers/JokesReducer';\nimport AppReducer from 'main/webapp/store/reducers/AppReducer';\n\nconst withProduce = reducers => reducers.map(reducer => produce((draft, action) => reducer(draft, action)));\n\nconst rootReducer = reduceReducers(initialState, ...withProduce([AppReducer, JokesReducer]));\n\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(thunkMiddleware)));\n\nexport default store;\n","export const BASE_NAME = '/react-app';\nexport const ROCK_PAPER_SCISSORS = '/rock-paper-scissors';\nexport const JOKES = '/jokes';\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\nimport { Icon, Menu } from 'semantic-ui-react';\n\nimport { JOKES, ROCK_PAPER_SCISSORS } from 'main/webapp/Routes';\n\nconst MainMenu = () => (\n  <Menu direction='top' inverted>\n    <Menu.Item>\n      <Link to={ROCK_PAPER_SCISSORS}>\n        <Icon name='gamepad' />\n        <FormattedMessage id={'app.menu.label.rockPaperScissors'} />\n      </Link>\n    </Menu.Item>\n    <Menu.Item>\n      <Link to={JOKES}>\n        <Icon name='talk' />\n        <FormattedMessage id={'app.menu.label.jokes'} />\n      </Link>\n    </Menu.Item>\n  </Menu>\n);\n\nexport default MainMenu;\n","import { Button, Image } from 'semantic-ui-react';\nimport styled from 'styled-components';\n\nexport const StyledButton = styled(Button)`\n  margin: 5px !important;\n`;\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const StyledImage = styled(Image)`\n  max-height: 100%;\n`;\n","export const OPPONENT_DELAY = 500; // ms\n\nexport const Actions = {\n  ROCK: 'rock',\n  PAPER: 'paper',\n  SCISSORS: 'scissors',\n};\n\nexport const ActionList = [Actions.ROCK, Actions.PAPER, Actions.SCISSORS];\n\nexport const Outcomes = {\n  WIN: 'win',\n  DRAW: 'draw',\n  DEFEAT: 'defeat',\n};\n\nexport const Colors = {\n  DEFAULT: null,\n  [Outcomes.WIN]: 'green',\n  [Outcomes.DRAW]: 'blue',\n  [Outcomes.DEFEAT]: 'red',\n};\n\nexport const OpponentColors = {\n  DEFAULT: null,\n  [Outcomes.DEFEAT]: 'green',\n  [Outcomes.DRAW]: 'blue',\n  [Outcomes.WIN]: 'red',\n};\n\nexport const defaultColors = {\n  [Actions.PAPER]: Colors.DEFAULT,\n  [Actions.ROCK]: Colors.DEFAULT,\n  [Actions.SCISSORS]: Colors.DEFAULT,\n};\n\nexport const getOutcome = (action, opponentAction) => {\n  if (action === opponentAction) {\n    return Outcomes.DRAW;\n  }\n  if (action === Actions.PAPER) {\n    return opponentAction === Actions.SCISSORS ? Outcomes.DEFEAT : Outcomes.WIN;\n  }\n  if (action === Actions.SCISSORS) {\n    return opponentAction === Actions.ROCK ? Outcomes.DEFEAT : Outcomes.WIN;\n  }\n  if (action === Actions.ROCK) {\n    return opponentAction === Actions.PAPER ? Outcomes.DEFEAT : Outcomes.WIN;\n  }\n};\n\nexport const getWinningAction = action => {\n  switch (action) {\n    case Actions.SCISSORS:\n      return Actions.ROCK;\n    case Actions.ROCK:\n      return Actions.PAPER;\n    case Actions.PAPER:\n      return Actions.SCISSORS;\n  }\n};\n","import { countBy, last, nth, pull, random, sample } from 'lodash';\n\nimport {\n  ActionList,\n  Actions,\n  getOutcome,\n  getWinningAction,\n  Outcomes,\n} from 'main/webapp/components/rock-paper-scissors/RockPaperScissorsUtility';\n\nexport const getDummyAction = () => {\n  return ActionList[0];\n};\n\nexport const getGreedyAction = actionHistory => {\n  if (actionHistory.length === 0) {\n    return getRandomAction();\n  }\n  const lastAction = last(actionHistory).action;\n\n  return getWinningAction(lastAction);\n};\n\nexport const getLastWinAction = actionHistory => {\n  for (const { action, opponentAction } of actionHistory.slice().reverse()) {\n    if (getOutcome(action, opponentAction) === Outcomes.DEFEAT) {\n      return opponentAction;\n    }\n  }\n  return getRandomAction();\n};\n\nexport const getEverChangingAction = actionHistory => {\n  const randomAction = getRandomAction();\n\n  if (actionHistory.length === 0) {\n    return randomAction;\n  }\n\n  const lastAction = last(actionHistory).opponentAction;\n  if (randomAction === lastAction) {\n    return getEverChangingAction(actionHistory);\n  }\n  return randomAction;\n};\n\nexport const getTit42TatAction = actionHistory => {\n  if (actionHistory.length < 2) {\n    return getRandomAction();\n  }\n  return nth(actionHistory, -2).action;\n};\n\nexport const getBalancedAction = actionHistory => {\n  const initValues = { [Actions.ROCK]: 0, [Actions.SCISSORS]: 0, [Actions.PAPER]: 0 };\n  const countedActions = { ...initValues, ...countBy(actionHistory, 'opponentAction') };\n  const minimum = Math.min(...Object.values(countedActions));\n\n  const minimumActions = Object.keys(countedActions).filter(key => countedActions[key] === minimum);\n  return sample(minimumActions);\n};\n\nexport const getOldestLossAction = actionHistory => {\n  const actions = [Actions.ROCK, Actions.SCISSORS, Actions.PAPER];\n\n  for (const { action, opponentAction } of actionHistory.slice().reverse()) {\n    if (actions.length === 1) {\n      return actions[0];\n    }\n    if (getOutcome(action, opponentAction) === Outcomes.WIN) {\n      pull(actions, opponentAction);\n    }\n  }\n  return sample(actions);\n};\n\nexport const getMostLikelyWinAction = actionHistory => {\n  const initValues = { [Actions.ROCK]: 0, [Actions.SCISSORS]: 0, [Actions.PAPER]: 0 };\n  const countedActions = { ...initValues, ...countBy(actionHistory, 'action') };\n  const maximum = Math.max(...Object.values(countedActions));\n\n  const maximumActions = Object.keys(countedActions).filter(key => countedActions[key] === maximum);\n  return getWinningAction(sample(maximumActions));\n};\n\nexport const getNoScissorsAction = () => {\n  const index = random(1);\n  return ActionList[index];\n};\n\nexport const getRandomAction = () => {\n  const index = random(2);\n  return ActionList[index];\n};\n","export default __webpack_public_path__ + \"static/media/bargrakIronFist.74f78560.jpg\";","export default __webpack_public_path__ + \"static/media/gothmogTheUnbalanced.08afe0f9.jpg\";","export default __webpack_public_path__ + \"static/media/greedyGolum.99202a76.jpg\";","export default __webpack_public_path__ + \"static/media/cunningSaruman.d7bfec46.jpg\";","export default __webpack_public_path__ + \"static/media/denethorTheUnstable.2ff8084d.png\";","import {\n  getBalancedAction,\n  getDummyAction,\n  getEverChangingAction,\n  getGreedyAction,\n  getLastWinAction,\n  getMostLikelyWinAction,\n  getNoScissorsAction,\n  getOldestLossAction,\n  getTit42TatAction,\n} from 'main/webapp/components/rock-paper-scissors/RockPaperScissorsStrategies';\nimport bargrak from 'main/webapp/images/bargrakIronFist.jpg';\nimport gothmog from 'main/webapp/images/gothmogTheUnbalanced.jpg';\nimport golum from 'main/webapp/images/greedyGolum.jpg';\nimport saruman from 'main/webapp/images/cunningSaruman.jpg';\nimport denethor from 'main/webapp/images/denethorTheUnstable.png';\nimport shokk from 'main/webapp/images/shokkTheDetermined.jpg';\nimport smaug from 'main/webapp/images/smaugMasterOfSkies.jpeg';\nimport shelob from 'main/webapp/images/carefulShelob.jpg';\nimport sauron from 'main/webapp/images/allKnowingSauron.jpg';\n\nexport const opponents = {\n  1: {\n    strategy: getDummyAction,\n    image: bargrak,\n    name: 'Bargrak Iron Fist',\n  },\n  2: {\n    strategy: getLastWinAction,\n    image: shokk,\n    name: 'Shokk the Determined',\n  },\n  3: {\n    strategy: getEverChangingAction,\n    image: denethor,\n    name: 'Denethor the Unstable',\n  },\n  4: {\n    strategy: getNoScissorsAction,\n    image: gothmog,\n    name: 'Gothmog the Unbalanced',\n  },\n  5: {\n    strategy: getGreedyAction,\n    image: golum,\n    name: 'Greedy Golum',\n  },\n  6: {\n    strategy: getTit42TatAction,\n    image: saruman,\n    name: 'Cunning Saruman',\n  },\n  7: {\n    strategy: getBalancedAction,\n    image: smaug,\n    name: 'Smaug Master of the Skies',\n  },\n  8: {\n    strategy: getOldestLossAction,\n    image: shelob,\n    name: 'Careful Shelob',\n  },\n  9: {\n    strategy: getMostLikelyWinAction,\n    image: sauron,\n    name: 'All knowing Sauron',\n  },\n};\n","export default __webpack_public_path__ + \"static/media/shokkTheDetermined.89fc0515.jpg\";","export default __webpack_public_path__ + \"static/media/smaugMasterOfSkies.03a21820.jpeg\";","export default __webpack_public_path__ + \"static/media/carefulShelob.6f102353.jpg\";","export default __webpack_public_path__ + \"static/media/allKnowingSauron.43f96d9f.jpg\";","import React, { useEffect, useState } from 'react';\nimport { Container, Grid, GridColumn, Transition } from 'semantic-ui-react';\nimport { isNull } from 'lodash';\n\nimport { ButtonContainer, StyledButton } from 'main/webapp/components/rock-paper-scissors/RockPaperScissors.style';\nimport {\n  Actions,\n  Colors,\n  defaultColors,\n  getOutcome,\n  OPPONENT_DELAY,\n  OpponentColors,\n} from 'main/webapp/components/rock-paper-scissors/RockPaperScissorsUtility';\nimport { opponents } from 'main/webapp/components/rock-paper-scissors/RockPaperScissorsConfig';\n\nconst ButtonWrapper = ({ id, color, onClick }) => (\n  <StyledButton size={'large'} id={id} icon={`hand ${id}`} onClick={onClick} color={color} />\n);\n\nexport const RockPaperScissors = ({ onOutcome, level }) => {\n  const [colors, setColors] = useState(defaultColors);\n  const [opponentAction, setOpponentAction] = useState(null);\n  const [opponentColor, setOpponentColor] = useState(null);\n  const [showOpponent, setShowOpponent] = useState(true);\n  const [actionHistory, setActionHistory] = useState([]);\n\n  const getOpponentAction = opponents[level].strategy;\n\n  useEffect(() => resetComponent(), [level]);\n\n  const resetComponent = () => {\n    setActionHistory([]);\n    setColors(defaultColors);\n    setOpponentAction(null);\n    setOpponentColor(null);\n    setShowOpponent(true);\n  };\n\n  const executeRound = nextAction => {\n    const nextOpponentAction = getOpponentAction(actionHistory);\n    const outcome = getOutcome(nextAction, nextOpponentAction);\n    const nextColors = { ...defaultColors, [nextAction]: Colors[outcome] };\n\n    // prepare transition\n    setShowOpponent(false);\n    setColors(defaultColors);\n\n    // execute changes after transition\n    setTimeout(() => {\n      setActionHistory([...actionHistory, { action: nextAction, opponentAction: nextOpponentAction }]);\n      setColors(nextColors);\n      setOpponentColor(OpponentColors[outcome]);\n      setOpponentAction(nextOpponentAction);\n      onOutcome(outcome);\n      setShowOpponent(true);\n    }, OPPONENT_DELAY);\n  };\n\n  const onClick = ({ currentTarget: { id: action } }) => showOpponent && executeRound(action);\n\n  return (\n    <Container>\n      <Grid columns={2} centered>\n        <GridColumn mobile={3}>\n          <ButtonContainer>\n            <ButtonWrapper id={Actions.ROCK} color={colors[Actions.ROCK]} onClick={onClick} />\n            <ButtonWrapper id={Actions.PAPER} color={colors[Actions.PAPER]} onClick={onClick} />\n            <ButtonWrapper id={Actions.SCISSORS} color={colors[Actions.SCISSORS]} onClick={onClick} />\n          </ButtonContainer>\n        </GridColumn>\n        <GridColumn mobile={3} verticalAlign={'middle'}>\n          <Transition visible={showOpponent && !isNull(opponentAction)} transitionOnMount>\n            <ButtonContainer>\n              <StyledButton\n                size={'large'}\n                id={'opponent'}\n                icon={opponentAction && `hand ${opponentAction}`}\n                color={opponentColor}\n              />\n            </ButtonContainer>\n          </Transition>\n        </GridColumn>\n      </Grid>\n    </Container>\n  );\n};\n","import React from 'react';\nimport { Modal, ModalActions, ModalContent, ModalHeader } from 'semantic-ui-react';\n\nexport const ModalWrapper = ({ open, actions, header, content }) => {\n  return (\n    <Modal basic closeOnDimmerClick={false} closeOnEscape={false} open={open} size='tiny'>\n      <ModalHeader>{header}</ModalHeader>\n      <ModalContent>{content}</ModalContent>\n      <ModalActions>{actions}</ModalActions>\n    </Modal>\n  );\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Button, Container, Icon } from 'semantic-ui-react';\n\nimport { ModalWrapper } from 'main/webapp/components/wrappers/ModalWrapper';\n\nexport const SuccessModal = ({ open, onConfirm, onDeny }) => {\n  return (\n    <ModalWrapper\n      open={open}\n      header={<FormattedMessage id={'app.rockPaperScissors.levelSuccess.header'} />}\n      content={<FormattedMessage id={'app.rockPaperScissors.levelSuccess.content'} />}\n      actions={\n        <Container>\n          <Button basic color='red' inverted onClick={onDeny}>\n            <Icon name='remove' />\n            <FormattedMessage id={'app.rockPaperScissors.levelSuccess.deny'} />\n          </Button>\n          <Button color='green' inverted onClick={onConfirm}>\n            <Icon name='checkmark' />\n            <FormattedMessage id={'app.rockPaperScissors.levelSuccess.confirm'} />\n          </Button>\n        </Container>\n      }\n    />\n  );\n};\n\nexport const FailureModal = ({ open, onConfirm }) => {\n  return (\n    <ModalWrapper\n      open={open}\n      header={<FormattedMessage id={'app.rockPaperScissors.levelFailure.header'} />}\n      content={<FormattedMessage id={'app.rockPaperScissors.levelFailure.content'} />}\n      actions={\n        <Container>\n          <Button inverted onClick={onConfirm}>\n            <Icon name='checkmark' />\n            <FormattedMessage id={'app.rockPaperScissors.levelFailure.confirm'} />\n          </Button>\n        </Container>\n      }\n    />\n  );\n};\n\nexport const LevelsCompleteModal = ({ open, onConfirm }) => {\n  return (\n    <ModalWrapper\n      open={open}\n      header={<FormattedMessage id={'app.rockPaperScissors.levelsComplete.header'} />}\n      content={<FormattedMessage id={'app.rockPaperScissors.levelsComplete.content'} />}\n      actions={\n        <Container>\n          <Button color='green' inverted onClick={onConfirm}>\n            <Icon name='checkmark' />\n            <FormattedMessage id={'app.rockPaperScissors.levelsComplete.confirm'} />\n          </Button>\n        </Container>\n      }\n    />\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Grid, GridRow, Header, Segment } from 'semantic-ui-react';\nimport { RockPaperScissors } from 'main/webapp/components/rock-paper-scissors/RockPaperScissors';\nimport { OPPONENT_DELAY, Outcomes } from 'main/webapp/components/rock-paper-scissors/RockPaperScissorsUtility';\nimport {\n  FailureModal,\n  LevelsCompleteModal,\n  SuccessModal,\n} from 'main/webapp/components/rock-paper-scissors/RockPaperScissorsModals';\nimport { opponents } from 'main/webapp/components/rock-paper-scissors/RockPaperScissorsConfig';\nimport { StyledImage } from 'main/webapp/components/rock-paper-scissors/RockPaperScissors.style';\n\nconst SCORE_LIMIT = 5;\n\nconst ScoreBoard = ({ score, opponentScore }) => (\n  <Segment compact>\n    <FormattedMessage id={'app.rockPaperScissors.scoreBoard.result'} values={{ score, opponentScore }} />\n  </Segment>\n);\n\nconst LevelDisplay = ({ level }) => (\n  <Header size={'medium'} textAlign={'center'}>\n    <FormattedMessage id={'app.rockPaperScissors.scoreBoard.level'} values={{ level }} />\n  </Header>\n);\n\nconst RockPaperScissorsBoard = () => {\n  const [level, setLevel] = useState(1);\n  const [score, setScore] = useState(0);\n  const [opponentScore, setOpponentScore] = useState(0);\n  const [showSuccessModal, setShowSuccessModal] = useState(false);\n  const [showFailureModal, setShowFailureModal] = useState(false);\n  const [showLevelsCompleteModal, setShowLevelsCompleteModal] = useState(false);\n\n  useEffect(() => {\n    if (score === SCORE_LIMIT && level < Object.keys(opponents).length) {\n      setTimeout(() => setShowSuccessModal(true), OPPONENT_DELAY);\n    }\n  }, [score, level]);\n\n  useEffect(() => {\n    if (score === SCORE_LIMIT && level === Object.keys(opponents).length) {\n      setTimeout(() => setShowLevelsCompleteModal(true), OPPONENT_DELAY);\n    }\n  }, [score, level]);\n\n  useEffect(() => {\n    if (opponentScore === SCORE_LIMIT) {\n      setTimeout(() => setShowFailureModal(true), OPPONENT_DELAY);\n    }\n  }, [opponentScore]);\n\n  const onOutcome = outcome => {\n    outcome === Outcomes.WIN && setScore(score + 1);\n    outcome === Outcomes.DEFEAT && setOpponentScore(opponentScore + 1);\n  };\n\n  const onConfirmSuccess = () => {\n    setShowSuccessModal(false);\n    setLevel(level + 1);\n    resetScore();\n  };\n\n  const onDenySuccess = () => {\n    setShowSuccessModal(false);\n    resetScore();\n  };\n\n  const onConfirmFailure = () => {\n    setShowFailureModal(false);\n    setLevel(1);\n    resetScore();\n  };\n\n  const onConfirmLevelsComplete = () => {\n    setShowLevelsCompleteModal(false);\n    setLevel(1);\n    resetScore();\n  };\n\n  const resetScore = () => {\n    setScore(0);\n    setOpponentScore(0);\n  };\n\n  return (\n    <Grid centered columns={1}>\n      <GridRow>\n        <LevelDisplay level={level} />\n      </GridRow>\n      <GridRow>\n        <ScoreBoard score={score} opponentScore={opponentScore} />\n      </GridRow>\n      <GridRow>\n        <RockPaperScissors onOutcome={onOutcome} level={level} />\n      </GridRow>\n      <GridRow>\n        <StyledImage src={opponents[level].image} size={'small'} />\n      </GridRow>\n      <GridRow>\n        <strong>{opponents[level].name}</strong>\n      </GridRow>\n      <SuccessModal open={showSuccessModal} onConfirm={onConfirmSuccess} onDeny={onDenySuccess} />\n      <FailureModal open={showFailureModal} onConfirm={onConfirmFailure} />\n      <LevelsCompleteModal open={showLevelsCompleteModal} onConfirm={onConfirmLevelsComplete} />\n    </Grid>\n  );\n};\n\nexport default RockPaperScissorsBoard;\n","import { get } from 'lodash';\n\nexport const getCategories = state => get(state, 'jokes.categories');\n","import { endLoading, startLoading } from 'main/webapp/store/action-creators/AppActionCreator';\nimport store from 'main/webapp/store/index';\n\nexport const withLoading = action => {\n  store.dispatch(startLoading());\n\n  return action.then(response => {\n    store.dispatch(endLoading());\n    return response;\n  });\n};\n","import { END_LOADING, START_LOADING } from 'main/webapp/store/constants/AppConstants';\n\nexport const startLoading = () => ({\n  type: START_LOADING,\n});\n\nexport const endLoading = () => ({\n  type: END_LOADING,\n});\n","import axios from 'axios';\nimport { setCategories } from 'main/webapp/store/action-creators/JokesActionCreator';\nimport { withLoading } from 'main/webapp/store/LoadingUtility';\n\nconst INSTANCE = axios.create({\n  baseURL: 'https://jokeapi-v2.p.rapidapi.com',\n  timeout: 1000,\n  headers: { 'x-rapidapi-key': process.env.RAPID_API_KEY },\n});\n\nexport const loadJokeCategories = dispatch =>\n  withLoading(INSTANCE.get('/categories').then(({ data: { categories } }) => dispatch(setCategories(categories))));\n\nexport const loadJoke = category => withLoading(INSTANCE.get(`joke/${category}`));\n","import { SET_CATEGORIES } from 'main/webapp/store/constants/JokesConstants';\n\nexport const setCategories = categories => ({\n  type: SET_CATEGORIES,\n  payload: categories,\n});\n","export const jokeTypes = { SINGLE_PART: 'single', TWO_PART: 'twopart' };\n","import { Segment } from 'semantic-ui-react';\nimport styled from 'styled-components';\n\nexport const StyledSegment = styled(Segment)`\n  max-width: 90%;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { jokeTypes } from 'main/webapp/components/jokes/Constants';\nimport { Divider, GridRow } from 'semantic-ui-react';\nimport { StyledSegment } from 'main/webapp/components/jokes/Jokes.style';\n\nconst DELIVERY_DELAY = 3000; // ms\n\nconst JokesBoard = props => {\n  const { type, joke, setup, delivery } = props.joke;\n  const [showDelivery, setShowDelivery] = useState(false);\n\n  useEffect(() => {\n    setShowDelivery(false);\n    setTimeout(() => setShowDelivery(true), DELIVERY_DELAY);\n  }, [delivery]);\n\n  const singlePartJoke = type === jokeTypes.SINGLE_PART;\n\n  const SinglePartJoke = () => <>{joke}</>;\n\n  const TwoPartJoke = () => (\n    <>\n      {setup}\n      <Divider section />\n      {showDelivery && <>{delivery}</>}\n    </>\n  );\n\n  return (\n    <GridRow>\n      <StyledSegment>{singlePartJoke ? <SinglePartJoke /> : <TwoPartJoke />}</StyledSegment>\n    </GridRow>\n  );\n};\nexport default JokesBoard;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FormattedMessage } from 'react-intl';\nimport { Button, Dropdown, Grid, GridRow } from 'semantic-ui-react';\nimport { isEmpty, isNull } from 'lodash';\n\nimport { getCategories } from 'main/webapp/store/selectors/JokesSelectors';\nimport { loadJoke, loadJokeCategories } from 'main/webapp/api/JokesAPI';\nimport Joke from 'main/webapp/components/jokes/Joke';\n\nconst JokesBoard = () => {\n  const categories = useSelector(getCategories);\n  const dispatch = useDispatch();\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [joke, setJoke] = useState({});\n\n  const dropdownOptions = categories.map(category => ({ key: category, text: category, value: category }));\n\n  useEffect(() => {\n    dispatch(loadJokeCategories);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const onClick = () => loadJoke(selectedCategory).then(({ data }) => setJoke(data));\n\n  return (\n    <Grid centered columns={1}>\n      <GridRow>\n        <Dropdown\n          placeholder='Type'\n          selection\n          options={dropdownOptions}\n          onChange={(event, { value }) => setSelectedCategory(value)}\n          value={selectedCategory}\n        />\n        <Button onClick={onClick} primary disabled={isNull(selectedCategory)}>\n          <FormattedMessage id={'app.jokes.button.text'} />\n        </Button>\n      </GridRow>\n      {!isEmpty(joke) && <Joke joke={joke} />}\n    </Grid>\n  );\n};\nexport default JokesBoard;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { Container, Loader, Modal } from 'semantic-ui-react';\n\nimport 'semantic-ui-css/semantic.min.css';\n\nimport MainMenu from 'main/webapp/components/MainMenu';\nimport RockPaperScissorsBoard from 'main/webapp/components/rock-paper-scissors/RockPaperScissorsBoard';\nimport { JOKES, ROCK_PAPER_SCISSORS } from 'main/webapp/Routes';\nimport JokesBoard from 'main/webapp/components/jokes/JokesBoard';\nimport { getIsLoading } from 'main/webapp/store/selectors/AppSelectors';\n\nconst App = () => {\n  const isLoading = useSelector(getIsLoading);\n\n  return (\n    <Container>\n      <Modal open={isLoading}>\n        <Loader active />\n      </Modal>\n      <MainMenu />\n      <Switch>\n        <Route path={ROCK_PAPER_SCISSORS}>\n          <RockPaperScissorsBoard />\n        </Route>\n        <Route path={JOKES}>\n          <JokesBoard />\n        </Route>\n      </Switch>\n    </Container>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { IntlProvider } from 'react-intl';\nimport { Provider } from 'react-redux';\n\nimport store from 'main/webapp/store';\nimport App from 'main/webapp/App';\nimport messages from 'main/webapp/translations/en.json';\n\nReactDOM.render(\n  <HashRouter>\n    <Provider store={store}>\n      <IntlProvider locale={'en'} messages={messages}>\n        <App />\n      </IntlProvider>\n    </Provider>\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}